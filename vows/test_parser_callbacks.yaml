# -*- coding:utf-8 -*-
# Created by Hans-Thomas on 2011-05-11.
#=============================================================================
#   test_parser_callbacks.yaml --- Wishes parser vows callbacks
#=============================================================================

recognizes Feature keyword:
  input: 'Feature: Parse feature file'
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [Parse feature file], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature and description:
  input: |
    Feature: Parse feature file
      As a developer
      I want to have a nice testing tool
      so coding is fun.
     
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [Parse feature file], {}]
  - [start_feature_description, [], {}]
  - [data, [As a developer], {}]
  - [data, [I want to have a nice testing tool], {}]
  - [data, [so coding is fun.], {}]
  - [finish_feature_description, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature and Scenario keyword:
  input: |
    Feature: Parse feature file
      Scenario: Test what is going on

  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [Parse feature file], {}]
  - [start_scenario, [Test what is going on], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature with description and Scenario:
  input: |
    Feature: Parse feature file
      As a developer
      I want to have a nice testing tool
      so coding is fun.

      Scenario: Test what is going on
     
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [Parse feature file], {}]
  - [start_feature_description, [], {}]
  - [data, [As a developer], {}]
  - [data, [I want to have a nice testing tool], {}]
  - [data, [so coding is fun.], {}]
  - [data, [''], {}]
  - [finish_feature_description, [], {}]
  - [start_scenario, [Test what is going on], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature Scenario and Given keyword:
  input: |
    Feature: Parse feature file
      Scenario: Test what is going on
        Given there is a step
       
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [Parse feature file], {}]
  - [start_scenario, [Test what is going on], {}]
  - [start_step, [Given, there is a step], {}]
  - [finish_step, [], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature Scenario and When keyword:
  input: |
    Feature: Parse feature file
      Scenario: Test what is going on
        When there is some action
       
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [Parse feature file], {}]
  - [start_scenario, [Test what is going on], {}]
  - [start_step, [When, there is some action], {}]
  - [finish_step, [], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature Scenario and Then keyword:
  input: |
    Feature: Parse feature file
      Scenario: Test what is going on
        Then I see some results
       
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [Parse feature file], {}]
  - [start_scenario, [Test what is going on], {}]
  - [start_step, [Then, I see some results], {}]
  - [finish_step, [], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature Scenario and And keyword:
  input: |
    Feature: Parse feature file
      Scenario: Test what is going on
        And there is more
     
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [Parse feature file], {}]
  - [start_scenario, [Test what is going on], {}]
  - [start_step, [And, there is more], {}]
  - [finish_step, [], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature Scenario and But keyword:
  input: |
    Feature: Parse feature file
      Scenario: Test what is going on
        But there is something else
       
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [Parse feature file], {}]
  - [start_scenario, [Test what is going on], {}]
  - [start_step, [But, there is something else], {}]
  - [finish_step, [], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature Scenario and Steps:
  input: |
    Feature: Parse feature file
      Scenario: Test what is going on
        Given there is a step
        And there is more
        When there is some action
        Then I see some results
        But there is something else
       
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [Parse feature file], {}]
  - [start_scenario, [Test what is going on], {}]
  - [start_step, [Given, there is a step], {}]
  - [finish_step, [], {}]
  - [start_step, [And, there is more], {}]
  - [finish_step, [], {}]
  - [start_step, [When, there is some action], {}]
  - [finish_step, [], {}]
  - [start_step, [Then, I see some results], {}]
  - [finish_step, [], {}]
  - [start_step, [But, there is something else], {}]
  - [finish_step, [], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses multiline:
  input: |
    Feature: Parse feature file
      Scenario: Test what is going on
        Given there is a step
          """
          With some
                indented
            multiline text.
          """
       
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [Parse feature file], {}]
  - [start_scenario, [Test what is going on], {}]
  - [start_step, [Given, there is a step], {}]
  - [start_multiline, [6], {}]
  - [data, ["With some\n"], {}]
  - [data, ["      indented\n"], {}]
  - [data, ["  multiline text.\n"], {}]
  - [finish_multiline, [], {}]
  - [finish_step, [], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses multiline between steps:
  input: |
    Feature: Parse feature file
      Scenario: Test what is going on
        Given there is a step
          """
          With some multiline text.
          """
        And another step afterwards
       
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [Parse feature file], {}]
  - [start_scenario, [Test what is going on], {}]
  - [start_step, [Given, there is a step], {}]
  - [start_multiline, [6], {}]
  - [data, ["With some multiline text.\n"], {}]
  - [finish_multiline, [], {}]
  - [finish_step, [], {}]
  - [start_step, [And, another step afterwards], {}]
  - [finish_step, [], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses multiline before new scenario:
  input: |
    Feature: Parse feature file
      Scenario: Test what is going on
        Given there is a step
          """
          With some multiline text.
          """
      Scenario: And another scenario behind
       
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [Parse feature file], {}]
  - [start_scenario, [Test what is going on], {}]
  - [start_step, [Given, there is a step], {}]
  - [start_multiline, [6], {}]
  - [data, ["With some multiline text.\n"], {}]
  - [finish_multiline, [], {}]
  - [finish_step, [], {}]
  - [finish_scenario, [], {}]
  - [start_scenario, [And another scenario behind], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature with Background:
  input: |
    Feature: with background
      Background: is here
  
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [with background], {}]
  - [start_background, [is here], {}]
  - [finish_background, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature with description and Background:
  input: |
    Feature: with background
      And some description
      Background: is here
  
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [with background], {}]
  - [start_feature_description, [], {}]
  - [data, [And some description], {}]
  - [finish_feature_description, [], {}]
  - [start_background, [is here], {}]
  - [finish_background, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature with Background and Step:
  input: |
    Feature: with background
      Background: is here
        And a background step
  
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [with background], {}]
  - [start_background, [is here], {}]
  - [start_step, [And, a background step], {}]
  - [finish_step, [], {}]
  - [finish_background, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature with Background and multiline Step:
  input: |
    Feature: with background
      Background: is here
        And a background multiline step
          """
            With some content
          """
  
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [with background], {}]
  - [start_background, [is here], {}]
  - [start_step, [And, a background multiline step], {}]
  - [start_multiline, [6], {}]
  - [data, ["  With some content\n"], {}]
  - [finish_multiline, [], {}]
  - [finish_step, [], {}]
  - [finish_background, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature with Background and Scenario and Step:
  input: |
    Feature: with background
      Background: is here
      Scenario: with step
        Given a step
  
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [with background], {}]
  - [start_background, [is here], {}]
  - [finish_background, [], {}]
  - [start_scenario, [with step], {}]
  - [start_step, [Given, a step], {}]
  - [finish_step, [], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature with Background and Scenarios:
  input: |
    Feature: with background
      Background: is here
      Scenario: first
      Scenario: second
  
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [with background], {}]
  - [start_background, [is here], {}]
  - [finish_background, [], {}]
  - [start_scenario, [first], {}]
  - [finish_scenario, [], {}]
  - [start_scenario, [second], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature with multiple Backgrounds:
  input: |
    Feature: with background
      Background: first
      Background: second
  
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [with background], {}]
  - [start_background, [first], {}]
  - [finish_background, [], {}]
  - [start_background, [second], {}]
  - [finish_background, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature with multiple Backgrounds and Scenarios:
  input: |
    Feature: with background
      Background: first
      Scenario: first
      Background: second
      Scenario: second
  
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [with background], {}]
  - [start_background, [first], {}]
  - [finish_background, [], {}]
  - [start_scenario, [first], {}]
  - [finish_scenario, [], {}]
  - [start_background, [second], {}]
  - [finish_background, [], {}]
  - [start_scenario, [second], {}]
  - [finish_scenario, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature with Background after Step:
  input: |
    Feature: with background
      Scenario: at start
        Given a step
      Background: here
  
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [with background], {}]
  - [start_scenario, [at start], {}]
  - [start_step, [Given, a step], {}]
  - [finish_step, [], {}]
  - [finish_scenario, [], {}]
  - [start_background, [here], {}]
  - [finish_background, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


parses Feature with Background after multiline Step:
  input: |
    Feature: with background
      Scenario: at start
        Given a multiline step
          """
          with content
          """
      Background: here
  
  callbacks:
  - [start_parse, [<string>], {}]
  - [start_feature, [with background], {}]
  - [start_scenario, [at start], {}]
  - [start_step, [Given, a multiline step], {}]
  - [start_multiline, [6], {}]
  - [data, ["with content\n"], {}]
  - [finish_multiline, [], {}]
  - [finish_step, [], {}]
  - [finish_scenario, [], {}]
  - [start_background, [here], {}]
  - [finish_background, [], {}]
  - [finish_feature, [], {}]
  - [finish_parse, [], {}]


#.............................................................................
#   test_parser_callbacks.yaml
