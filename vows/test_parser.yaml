# -*- coding:utf-8 -*-
# Autogenerated on 2011-06-02.
#=============================================================================
#   test_parser.yaml --- Wishes parser vows, data driven
#=============================================================================

callbacks:

  handle background in background:
    success: false
    input: |
      Feature: handle background in background a
      Background: handle background in background b
      Background: handle background in background d
      Scenario: handle background in background c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle background in background a], {}]
    - [start_background, [handle background in background b], {}]
    - [parse_error, [], {}]

  handle comment in background:
    success: true
    input: |
      Feature: handle comment in background a
      Background: handle comment in background b
      # handle comment in background d
      Scenario: handle comment in background c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in background a], {}]
    - [start_background, [handle comment in background b], {}]
    - [comment, ['# handle comment in background d

      '], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle comment in background c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in background:
    success: false
    input: |
      Feature: handle description in background a
      Background: handle description in background b
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in background a], {}]
    - [start_background, [handle description in background b], {}]
    - [parse_error, [], {}]

  handle examples in background 1:
    success: false
    input: |
      Feature: handle examples in background a
      Background: handle examples in background b
      Examples: handle examples in background d
      | examples | in | background | c |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in background a], {}]
    - [start_background, [handle examples in background b], {}]
    - [parse_error, [], {}]

  handle examples in background 2:
    success: false
    input: |
      Feature: handle examples in background a
      Background: handle examples in background b
      Scenarios: handle examples in background e
      | examples | in | background | c |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in background a], {}]
    - [start_background, [handle examples in background b], {}]
    - [parse_error, [], {}]

  handle feature in background:
    success: false
    input: |
      Feature: handle feature in background a
      Background: handle feature in background b
      Feature: handle feature in background c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle feature in background a], {}]
    - [start_background, [handle feature in background b], {}]
    - [parse_error, [], {}]

  handle hash in background:
    success: false
    input: |
      Feature: handle hash in background a
      Background: handle hash in background b
      | hash | in | background | c |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle hash in background a], {}]
    - [start_background, [handle hash in background b], {}]
    - [parse_error, [], {}]

  handle multiline in background:
    success: false
    input: |
      Feature: handle multiline in background a
      Background: handle multiline in background b
      """
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline in background a], {}]
    - [start_background, [handle multiline in background b], {}]
    - [parse_error, [], {}]

  handle multiline_data in background:
    success: false
    input: |
      Feature: handle multiline_data in background a
      Background: handle multiline_data in background b
        random text
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline_data in background a], {}]
    - [start_background, [handle multiline_data in background b], {}]
    - [parse_error, [], {}]

  handle outline in background:
    success: true
    input: |
      Feature: handle outline in background a
      Background: handle outline in background b
      Scenario Outline: handle outline in background e
      Examples: handle outline in background c
      | outline | in | background | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in background a], {}]
    - [start_background, [handle outline in background b], {}]
    - [finish_background, [], {}]
    - [start_outline, [handle outline in background e], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle outline in background c], {}]
    - [start_hash, [outline, in, background, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle scenario in background:
    success: true
    input: |
      Feature: handle scenario in background a
      Background: handle scenario in background b
      Scenario: handle scenario in background c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in background a], {}]
    - [start_background, [handle scenario in background b], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle scenario in background c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background 1:
    success: true
    input: |
      Feature: handle step in background a
      Background: handle step in background b
      Given handle step in background d
      Scenario: handle step in background c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background a], {}]
    - [start_background, [handle step in background b], {}]
    - [start_step, [Given, handle step in background d], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background 2:
    success: true
    input: |
      Feature: handle step in background a
      Background: handle step in background b
      When handle step in background e
      Scenario: handle step in background c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background a], {}]
    - [start_background, [handle step in background b], {}]
    - [start_step, [When, handle step in background e], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background 3:
    success: true
    input: |
      Feature: handle step in background a
      Background: handle step in background b
      Then handle step in background f
      Scenario: handle step in background c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background a], {}]
    - [start_background, [handle step in background b], {}]
    - [start_step, [Then, handle step in background f], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background 4:
    success: true
    input: |
      Feature: handle step in background a
      Background: handle step in background b
      And handle step in background g
      Scenario: handle step in background c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background a], {}]
    - [start_background, [handle step in background b], {}]
    - [start_step, [And, handle step in background g], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background 5:
    success: true
    input: |
      Feature: handle step in background a
      Background: handle step in background b
      But handle step in background h
      Scenario: handle step in background c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background a], {}]
    - [start_background, [handle step in background b], {}]
    - [start_step, [But, handle step in background h], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in background 1:
    success: true
    input: |
      Feature: handle tags in background a
      Background: handle tags in background b
      @tag_0
      Scenario: handle tags in background c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in background a], {}]
    - [start_background, [handle tags in background b], {}]
    - [finish_background, [], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle tags in background c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in background 2:
    success: true
    input: |
      Feature: handle tags in background a
      Background: handle tags in background b
      @tag_1 @tag_2
      Scenario: handle tags in background c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in background a], {}]
    - [start_background, [handle tags in background b], {}]
    - [finish_background, [], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_scenario, [handle tags in background c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle background in background_hash:
    success: false
    input: |
      Feature: handle background in background_hash a
      Background: handle background in background_hash b
      Given handle background in background_hash c
      | background | in | background_hash | d |
      Background: handle background in background_hash f
      Scenario: handle background in background_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle background in background_hash a], {}]
    - [start_background, [handle background in background_hash b], {}]
    - [start_step, [Given, handle background in background_hash c], {}]
    - [start_hash, [background, in, background_hash, d], {}]
    - [parse_error, [], {}]

  handle comment in background_hash:
    success: true
    input: |
      Feature: handle comment in background_hash a
      Background: handle comment in background_hash b
      Given handle comment in background_hash c
      | comment | in | background_hash | d |
      # handle comment in background_hash f
      Scenario: handle comment in background_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in background_hash a], {}]
    - [start_background, [handle comment in background_hash b], {}]
    - [start_step, [Given, handle comment in background_hash c], {}]
    - [start_hash, [comment, in, background_hash, d], {}]
    - [comment, ['# handle comment in background_hash f

      '], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle comment in background_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in background_hash:
    success: false
    input: |
      Feature: handle description in background_hash a
      Background: handle description in background_hash b
      Given handle description in background_hash c
      | description | in | background_hash | d |
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in background_hash a], {}]
    - [start_background, [handle description in background_hash b], {}]
    - [start_step, [Given, handle description in background_hash c], {}]
    - [start_hash, [description, in, background_hash, d], {}]
    - [parse_error, [], {}]

  handle examples in background_hash 1:
    success: false
    input: |
      Feature: handle examples in background_hash a
      Background: handle examples in background_hash b
      Given handle examples in background_hash c
      | examples | in | background_hash | d |
      Examples: handle examples in background_hash f
      | examples | in | background_hash | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in background_hash a], {}]
    - [start_background, [handle examples in background_hash b], {}]
    - [start_step, [Given, handle examples in background_hash c], {}]
    - [start_hash, [examples, in, background_hash, d], {}]
    - [parse_error, [], {}]

  handle examples in background_hash 2:
    success: false
    input: |
      Feature: handle examples in background_hash a
      Background: handle examples in background_hash b
      Given handle examples in background_hash c
      | examples | in | background_hash | d |
      Scenarios: handle examples in background_hash g
      | examples | in | background_hash | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in background_hash a], {}]
    - [start_background, [handle examples in background_hash b], {}]
    - [start_step, [Given, handle examples in background_hash c], {}]
    - [start_hash, [examples, in, background_hash, d], {}]
    - [parse_error, [], {}]

  handle feature in background_hash:
    success: false
    input: |
      Feature: handle feature in background_hash a
      Background: handle feature in background_hash b
      Given handle feature in background_hash c
      | feature | in | background_hash | d |
      Feature: handle feature in background_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle feature in background_hash a], {}]
    - [start_background, [handle feature in background_hash b], {}]
    - [start_step, [Given, handle feature in background_hash c], {}]
    - [start_hash, [feature, in, background_hash, d], {}]
    - [parse_error, [], {}]

  handle hash in background_hash:
    success: true
    input: |
      Feature: handle hash in background_hash a
      Background: handle hash in background_hash b
      Given handle hash in background_hash c
      | hash | in | background_hash | d |
      | hash | in | background_hash | f |
      Scenario: handle hash in background_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle hash in background_hash a], {}]
    - [start_background, [handle hash in background_hash b], {}]
    - [start_step, [Given, handle hash in background_hash c], {}]
    - [start_hash, [hash, in, background_hash, d], {}]
    - [hash_data, [hash, in, background_hash, f], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle hash in background_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline in background_hash:
    success: false
    input: |
      Feature: handle multiline in background_hash a
      Background: handle multiline in background_hash b
      Given handle multiline in background_hash c
      | multiline | in | background_hash | d |
      """
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline in background_hash a], {}]
    - [start_background, [handle multiline in background_hash b], {}]
    - [start_step, [Given, handle multiline in background_hash c], {}]
    - [start_hash, [multiline, in, background_hash, d], {}]
    - [parse_error, [], {}]

  handle multiline_data in background_hash:
    success: false
    input: |
      Feature: handle multiline_data in background_hash a
      Background: handle multiline_data in background_hash b
      Given handle multiline_data in background_hash c
      | multiline_data | in | background_hash | d |
        random text
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline_data in background_hash a], {}]
    - [start_background, [handle multiline_data in background_hash b], {}]
    - [start_step, [Given, handle multiline_data in background_hash c], {}]
    - [start_hash, [multiline_data, in, background_hash, d], {}]
    - [parse_error, [], {}]

  handle multiline_end in background_hash:
    success: false
    input: |
      Feature: handle multiline_end in background_hash a
      Background: handle multiline_end in background_hash b
      Given handle multiline_end in background_hash c
      | multiline_end | in | background_hash | d |
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline_end in background_hash a], {}]
    - [start_background, [handle multiline_end in background_hash b], {}]
    - [start_step, [Given, handle multiline_end in background_hash c], {}]
    - [start_hash, [multiline_end, in, background_hash, d], {}]
    - [parse_error, [], {}]

  handle outline in background_hash:
    success: true
    input: |
      Feature: handle outline in background_hash a
      Background: handle outline in background_hash b
      Given handle outline in background_hash c
      | outline | in | background_hash | d |
      Scenario Outline: handle outline in background_hash g
      Examples: handle outline in background_hash e
      | outline | in | background_hash | f |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in background_hash a], {}]
    - [start_background, [handle outline in background_hash b], {}]
    - [start_step, [Given, handle outline in background_hash c], {}]
    - [start_hash, [outline, in, background_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_outline, [handle outline in background_hash g], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle outline in background_hash e], {}]
    - [start_hash, [outline, in, background_hash, f], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle scenario in background_hash:
    success: true
    input: |
      Feature: handle scenario in background_hash a
      Background: handle scenario in background_hash b
      Given handle scenario in background_hash c
      | scenario | in | background_hash | d |
      Scenario: handle scenario in background_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in background_hash a], {}]
    - [start_background, [handle scenario in background_hash b], {}]
    - [start_step, [Given, handle scenario in background_hash c], {}]
    - [start_hash, [scenario, in, background_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle scenario in background_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background_hash 1:
    success: true
    input: |
      Feature: handle step in background_hash a
      Background: handle step in background_hash b
      Given handle step in background_hash c
      | step | in | background_hash | d |
      Given handle step in background_hash f
      Scenario: handle step in background_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background_hash a], {}]
    - [start_background, [handle step in background_hash b], {}]
    - [start_step, [Given, handle step in background_hash c], {}]
    - [start_hash, [step, in, background_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [Given, handle step in background_hash f], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background_hash 2:
    success: true
    input: |
      Feature: handle step in background_hash a
      Background: handle step in background_hash b
      Given handle step in background_hash c
      | step | in | background_hash | d |
      When handle step in background_hash g
      Scenario: handle step in background_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background_hash a], {}]
    - [start_background, [handle step in background_hash b], {}]
    - [start_step, [Given, handle step in background_hash c], {}]
    - [start_hash, [step, in, background_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [When, handle step in background_hash g], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background_hash 3:
    success: true
    input: |
      Feature: handle step in background_hash a
      Background: handle step in background_hash b
      Given handle step in background_hash c
      | step | in | background_hash | d |
      Then handle step in background_hash h
      Scenario: handle step in background_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background_hash a], {}]
    - [start_background, [handle step in background_hash b], {}]
    - [start_step, [Given, handle step in background_hash c], {}]
    - [start_hash, [step, in, background_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [Then, handle step in background_hash h], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background_hash 4:
    success: true
    input: |
      Feature: handle step in background_hash a
      Background: handle step in background_hash b
      Given handle step in background_hash c
      | step | in | background_hash | d |
      And handle step in background_hash i
      Scenario: handle step in background_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background_hash a], {}]
    - [start_background, [handle step in background_hash b], {}]
    - [start_step, [Given, handle step in background_hash c], {}]
    - [start_hash, [step, in, background_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [And, handle step in background_hash i], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background_hash 5:
    success: true
    input: |
      Feature: handle step in background_hash a
      Background: handle step in background_hash b
      Given handle step in background_hash c
      | step | in | background_hash | d |
      But handle step in background_hash j
      Scenario: handle step in background_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background_hash a], {}]
    - [start_background, [handle step in background_hash b], {}]
    - [start_step, [Given, handle step in background_hash c], {}]
    - [start_hash, [step, in, background_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [But, handle step in background_hash j], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in background_hash 1:
    success: true
    input: |
      Feature: handle tags in background_hash a
      Background: handle tags in background_hash b
      Given handle tags in background_hash c
      | tags | in | background_hash | d |
      @tag_0
      Scenario: handle tags in background_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in background_hash a], {}]
    - [start_background, [handle tags in background_hash b], {}]
    - [start_step, [Given, handle tags in background_hash c], {}]
    - [start_hash, [tags, in, background_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle tags in background_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in background_hash 2:
    success: true
    input: |
      Feature: handle tags in background_hash a
      Background: handle tags in background_hash b
      Given handle tags in background_hash c
      | tags | in | background_hash | d |
      @tag_1 @tag_2
      Scenario: handle tags in background_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in background_hash a], {}]
    - [start_background, [handle tags in background_hash b], {}]
    - [start_step, [Given, handle tags in background_hash c], {}]
    - [start_hash, [tags, in, background_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_scenario, [handle tags in background_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline_data in background_multiline:
    success: true
    input: |
      Feature: handle multiline_data in background_multiline a
      Background: handle multiline_data in background_multiline b
      Given handle multiline_data in background_multiline c
      """
        random text
      """
      Scenario: handle multiline_data in background_multiline d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline_data in background_multiline a], {}]
    - [start_background, [handle multiline_data in background_multiline b], {}]
    - [start_step, [Given, handle multiline_data in background_multiline c], {}]
    - [start_multiline, [0], {}]
    - [data, ['  random text

      '], {}]
    - [finish_multiline, [], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle multiline_data in background_multiline d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline_end in background_multiline:
    success: true
    input: |
      Feature: handle multiline_end in background_multiline a
      Background: handle multiline_end in background_multiline b
      Given handle multiline_end in background_multiline c
      """
      """
      Scenario: handle multiline_end in background_multiline d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline_end in background_multiline a], {}]
    - [start_background, [handle multiline_end in background_multiline b], {}]
    - [start_step, [Given, handle multiline_end in background_multiline c], {}]
    - [start_multiline, [0], {}]
    - [finish_multiline, [], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle multiline_end in background_multiline d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle background in background_step:
    success: false
    input: |
      Feature: handle background in background_step a
      Background: handle background in background_step b
      Given handle background in background_step c
      Background: handle background in background_step e
      Scenario: handle background in background_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle background in background_step a], {}]
    - [start_background, [handle background in background_step b], {}]
    - [start_step, [Given, handle background in background_step c], {}]
    - [parse_error, [], {}]

  handle comment in background_step:
    success: true
    input: |
      Feature: handle comment in background_step a
      Background: handle comment in background_step b
      Given handle comment in background_step c
      # handle comment in background_step e
      Scenario: handle comment in background_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in background_step a], {}]
    - [start_background, [handle comment in background_step b], {}]
    - [start_step, [Given, handle comment in background_step c], {}]
    - [comment, ['# handle comment in background_step e

      '], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle comment in background_step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in background_step:
    success: false
    input: |
      Feature: handle description in background_step a
      Background: handle description in background_step b
      Given handle description in background_step c
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in background_step a], {}]
    - [start_background, [handle description in background_step b], {}]
    - [start_step, [Given, handle description in background_step c], {}]
    - [parse_error, [], {}]

  handle examples in background_step 1:
    success: false
    input: |
      Feature: handle examples in background_step a
      Background: handle examples in background_step b
      Given handle examples in background_step c
      Examples: handle examples in background_step e
      | examples | in | background_step | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in background_step a], {}]
    - [start_background, [handle examples in background_step b], {}]
    - [start_step, [Given, handle examples in background_step c], {}]
    - [parse_error, [], {}]

  handle examples in background_step 2:
    success: false
    input: |
      Feature: handle examples in background_step a
      Background: handle examples in background_step b
      Given handle examples in background_step c
      Scenarios: handle examples in background_step f
      | examples | in | background_step | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in background_step a], {}]
    - [start_background, [handle examples in background_step b], {}]
    - [start_step, [Given, handle examples in background_step c], {}]
    - [parse_error, [], {}]

  handle feature in background_step:
    success: false
    input: |
      Feature: handle feature in background_step a
      Background: handle feature in background_step b
      Given handle feature in background_step c
      Feature: handle feature in background_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle feature in background_step a], {}]
    - [start_background, [handle feature in background_step b], {}]
    - [start_step, [Given, handle feature in background_step c], {}]
    - [parse_error, [], {}]

  handle hash in background_step:
    success: true
    input: |
      Feature: handle hash in background_step a
      Background: handle hash in background_step b
      Given handle hash in background_step c
      | hash | in | background_step | e |
      Scenario: handle hash in background_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle hash in background_step a], {}]
    - [start_background, [handle hash in background_step b], {}]
    - [start_step, [Given, handle hash in background_step c], {}]
    - [start_hash, [hash, in, background_step, e], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle hash in background_step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline in background_step:
    success: true
    input: |
      Feature: handle multiline in background_step a
      Background: handle multiline in background_step b
      Given handle multiline in background_step c
      """
      """
      Scenario: handle multiline in background_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline in background_step a], {}]
    - [start_background, [handle multiline in background_step b], {}]
    - [start_step, [Given, handle multiline in background_step c], {}]
    - [start_multiline, [0], {}]
    - [finish_multiline, [], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle multiline in background_step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle outline in background_step:
    success: true
    input: |
      Feature: handle outline in background_step a
      Background: handle outline in background_step b
      Given handle outline in background_step c
      Scenario Outline: handle outline in background_step f
      Examples: handle outline in background_step d
      | outline | in | background_step | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in background_step a], {}]
    - [start_background, [handle outline in background_step b], {}]
    - [start_step, [Given, handle outline in background_step c], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_outline, [handle outline in background_step f], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle outline in background_step d], {}]
    - [start_hash, [outline, in, background_step, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle scenario in background_step:
    success: true
    input: |
      Feature: handle scenario in background_step a
      Background: handle scenario in background_step b
      Given handle scenario in background_step c
      Scenario: handle scenario in background_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in background_step a], {}]
    - [start_background, [handle scenario in background_step b], {}]
    - [start_step, [Given, handle scenario in background_step c], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle scenario in background_step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background_step 1:
    success: true
    input: |
      Feature: handle step in background_step a
      Background: handle step in background_step b
      Given handle step in background_step c
      Given handle step in background_step e
      Scenario: handle step in background_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background_step a], {}]
    - [start_background, [handle step in background_step b], {}]
    - [start_step, [Given, handle step in background_step c], {}]
    - [finish_step, [], {}]
    - [start_step, [Given, handle step in background_step e], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background_step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background_step 2:
    success: true
    input: |
      Feature: handle step in background_step a
      Background: handle step in background_step b
      Given handle step in background_step c
      When handle step in background_step f
      Scenario: handle step in background_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background_step a], {}]
    - [start_background, [handle step in background_step b], {}]
    - [start_step, [Given, handle step in background_step c], {}]
    - [finish_step, [], {}]
    - [start_step, [When, handle step in background_step f], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background_step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background_step 3:
    success: true
    input: |
      Feature: handle step in background_step a
      Background: handle step in background_step b
      Given handle step in background_step c
      Then handle step in background_step g
      Scenario: handle step in background_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background_step a], {}]
    - [start_background, [handle step in background_step b], {}]
    - [start_step, [Given, handle step in background_step c], {}]
    - [finish_step, [], {}]
    - [start_step, [Then, handle step in background_step g], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background_step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background_step 4:
    success: true
    input: |
      Feature: handle step in background_step a
      Background: handle step in background_step b
      Given handle step in background_step c
      And handle step in background_step h
      Scenario: handle step in background_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background_step a], {}]
    - [start_background, [handle step in background_step b], {}]
    - [start_step, [Given, handle step in background_step c], {}]
    - [finish_step, [], {}]
    - [start_step, [And, handle step in background_step h], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background_step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in background_step 5:
    success: true
    input: |
      Feature: handle step in background_step a
      Background: handle step in background_step b
      Given handle step in background_step c
      But handle step in background_step i
      Scenario: handle step in background_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in background_step a], {}]
    - [start_background, [handle step in background_step b], {}]
    - [start_step, [Given, handle step in background_step c], {}]
    - [finish_step, [], {}]
    - [start_step, [But, handle step in background_step i], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle step in background_step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in background_step 1:
    success: true
    input: |
      Feature: handle tags in background_step a
      Background: handle tags in background_step b
      Given handle tags in background_step c
      @tag_0
      Scenario: handle tags in background_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in background_step a], {}]
    - [start_background, [handle tags in background_step b], {}]
    - [start_step, [Given, handle tags in background_step c], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle tags in background_step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in background_step 2:
    success: true
    input: |
      Feature: handle tags in background_step a
      Background: handle tags in background_step b
      Given handle tags in background_step c
      @tag_1 @tag_2
      Scenario: handle tags in background_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in background_step a], {}]
    - [start_background, [handle tags in background_step b], {}]
    - [start_step, [Given, handle tags in background_step c], {}]
    - [finish_step, [], {}]
    - [finish_background, [], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_scenario, [handle tags in background_step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle comment in description:
    success: true
    input: |
      Feature: handle comment in description a
      some lines
      of description
      # handle comment in description b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in description a], {}]
    - [start_description, [], {}]
    - [data, [some lines], {}]
    - [data, [of description], {}]
    - [comment, ['# handle comment in description b'], {}]
    - [finish_description, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in description:
    success: true
    input: |
      Feature: handle description in description a
      some lines
      of description
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in description a], {}]
    - [start_description, [], {}]
    - [data, [some lines], {}]
    - [data, [of description], {}]
    - [data, [some lines], {}]
    - [data, [of description], {}]
    - [finish_description, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle outline in description:
    success: true
    input: |
      Feature: handle outline in description a
      some lines
      of description
      Scenario Outline: handle outline in description d
      Examples: handle outline in description b
      | outline | in | description | c |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in description a], {}]
    - [start_description, [], {}]
    - [data, [some lines], {}]
    - [data, [of description], {}]
    - [finish_description, [], {}]
    - [start_outline, [handle outline in description d], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle outline in description b], {}]
    - [start_hash, [outline, in, description, c], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle scenario in description:
    success: true
    input: |
      Feature: handle scenario in description a
      some lines
      of description
      Scenario: handle scenario in description b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in description a], {}]
    - [start_description, [], {}]
    - [data, [some lines], {}]
    - [data, [of description], {}]
    - [finish_description, [], {}]
    - [start_scenario, [handle scenario in description b], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in description 1:
    success: true
    input: |
      Feature: handle tags in description a
      some lines
      of description
      @tag_0
      Scenario: handle tags in description b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in description a], {}]
    - [start_description, [], {}]
    - [data, [some lines], {}]
    - [data, [of description], {}]
    - [finish_description, [], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle tags in description b], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in description 2:
    success: true
    input: |
      Feature: handle tags in description a
      some lines
      of description
      @tag_1 @tag_2
      Scenario: handle tags in description b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in description a], {}]
    - [start_description, [], {}]
    - [data, [some lines], {}]
    - [data, [of description], {}]
    - [finish_description, [], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_scenario, [handle tags in description b], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle background in examples:
    success: false
    input: |
      Feature: handle background in examples a
      Scenario Outline: handle background in examples b
      Examples: handle background in examples c
      Background: handle background in examples e
      Scenario: handle background in examples d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle background in examples a], {}]
    - [start_outline, [handle background in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle background in examples c], {}]
    - [parse_error, [], {}]

  handle comment in examples:
    success: true
    input: |
      Feature: handle comment in examples a
      Scenario Outline: handle comment in examples b
      Examples: handle comment in examples c
      # handle comment in examples e
      | comment | in | examples | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in examples a], {}]
    - [start_outline, [handle comment in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle comment in examples c], {}]
    - [comment, ['# handle comment in examples e

      '], {}]
    - [start_hash, [comment, in, examples, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in examples:
    success: false
    input: |
      Feature: handle description in examples a
      Scenario Outline: handle description in examples b
      Examples: handle description in examples c
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in examples a], {}]
    - [start_outline, [handle description in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle description in examples c], {}]
    - [parse_error, [], {}]

  handle examples in examples 1:
    success: false
    input: |
      Feature: handle examples in examples a
      Scenario Outline: handle examples in examples b
      Examples: handle examples in examples c
      Examples: handle examples in examples e
      | examples | in | examples | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in examples a], {}]
    - [start_outline, [handle examples in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle examples in examples c], {}]
    - [parse_error, [], {}]

  handle examples in examples 2:
    success: false
    input: |
      Feature: handle examples in examples a
      Scenario Outline: handle examples in examples b
      Examples: handle examples in examples c
      Scenarios: handle examples in examples f
      | examples | in | examples | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in examples a], {}]
    - [start_outline, [handle examples in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle examples in examples c], {}]
    - [parse_error, [], {}]

  handle feature in examples:
    success: false
    input: |
      Feature: handle feature in examples a
      Scenario Outline: handle feature in examples b
      Examples: handle feature in examples c
      Feature: handle feature in examples d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle feature in examples a], {}]
    - [start_outline, [handle feature in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle feature in examples c], {}]
    - [parse_error, [], {}]

  handle hash in examples:
    success: true
    input: |
      Feature: handle hash in examples a
      Scenario Outline: handle hash in examples b
      Examples: handle hash in examples c
      | hash | in | examples | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle hash in examples a], {}]
    - [start_outline, [handle hash in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle hash in examples c], {}]
    - [start_hash, [hash, in, examples, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline in examples:
    success: false
    input: |
      Feature: handle multiline in examples a
      Scenario Outline: handle multiline in examples b
      Examples: handle multiline in examples c
      """
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline in examples a], {}]
    - [start_outline, [handle multiline in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle multiline in examples c], {}]
    - [parse_error, [], {}]

  handle outline in examples:
    success: false
    input: |
      Feature: handle outline in examples a
      Scenario Outline: handle outline in examples b
      Examples: handle outline in examples c
      Scenario Outline: handle outline in examples f
      Examples: handle outline in examples d
      | outline | in | examples | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in examples a], {}]
    - [start_outline, [handle outline in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle outline in examples c], {}]
    - [parse_error, [], {}]

  handle scenario in examples:
    success: false
    input: |
      Feature: handle scenario in examples a
      Scenario Outline: handle scenario in examples b
      Examples: handle scenario in examples c
      Scenario: handle scenario in examples d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in examples a], {}]
    - [start_outline, [handle scenario in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle scenario in examples c], {}]
    - [parse_error, [], {}]

  handle step in examples 1:
    success: false
    input: |
      Feature: handle step in examples a
      Scenario Outline: handle step in examples b
      Examples: handle step in examples c
      Given handle step in examples d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in examples a], {}]
    - [start_outline, [handle step in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in examples c], {}]
    - [parse_error, [], {}]

  handle step in examples 2:
    success: false
    input: |
      Feature: handle step in examples a
      Scenario Outline: handle step in examples b
      Examples: handle step in examples c
      When handle step in examples e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in examples a], {}]
    - [start_outline, [handle step in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in examples c], {}]
    - [parse_error, [], {}]

  handle step in examples 3:
    success: false
    input: |
      Feature: handle step in examples a
      Scenario Outline: handle step in examples b
      Examples: handle step in examples c
      Then handle step in examples f

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in examples a], {}]
    - [start_outline, [handle step in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in examples c], {}]
    - [parse_error, [], {}]

  handle step in examples 4:
    success: false
    input: |
      Feature: handle step in examples a
      Scenario Outline: handle step in examples b
      Examples: handle step in examples c
      And handle step in examples g

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in examples a], {}]
    - [start_outline, [handle step in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in examples c], {}]
    - [parse_error, [], {}]

  handle step in examples 5:
    success: false
    input: |
      Feature: handle step in examples a
      Scenario Outline: handle step in examples b
      Examples: handle step in examples c
      But handle step in examples h

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in examples a], {}]
    - [start_outline, [handle step in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in examples c], {}]
    - [parse_error, [], {}]

  handle tags in examples 1:
    success: false
    input: |
      Feature: handle tags in examples a
      Scenario Outline: handle tags in examples b
      Examples: handle tags in examples c
      @tag_0
      Scenario: handle tags in examples d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in examples a], {}]
    - [start_outline, [handle tags in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle tags in examples c], {}]
    - [parse_error, [], {}]

  handle tags in examples 2:
    success: false
    input: |
      Feature: handle tags in examples a
      Scenario Outline: handle tags in examples b
      Examples: handle tags in examples c
      @tag_1 @tag_2
      Scenario: handle tags in examples d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in examples a], {}]
    - [start_outline, [handle tags in examples b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle tags in examples c], {}]
    - [parse_error, [], {}]

  handle background in examples_hash:
    success: true
    input: |
      Feature: handle background in examples_hash a
      Scenario Outline: handle background in examples_hash b
      Examples: handle background in examples_hash c
      | background | in | examples_hash | d |
      Background: handle background in examples_hash f
      Scenario: handle background in examples_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle background in examples_hash a], {}]
    - [start_outline, [handle background in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle background in examples_hash c], {}]
    - [start_hash, [background, in, examples_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [start_background, [handle background in examples_hash f], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle background in examples_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle comment in examples_hash:
    success: true
    input: |
      Feature: handle comment in examples_hash a
      Scenario Outline: handle comment in examples_hash b
      Examples: handle comment in examples_hash c
      | comment | in | examples_hash | d |
      # handle comment in examples_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in examples_hash a], {}]
    - [start_outline, [handle comment in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle comment in examples_hash c], {}]
    - [start_hash, [comment, in, examples_hash, d], {}]
    - [comment, ['# handle comment in examples_hash e'], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in examples_hash:
    success: false
    input: |
      Feature: handle description in examples_hash a
      Scenario Outline: handle description in examples_hash b
      Examples: handle description in examples_hash c
      | description | in | examples_hash | d |
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in examples_hash a], {}]
    - [start_outline, [handle description in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle description in examples_hash c], {}]
    - [start_hash, [description, in, examples_hash, d], {}]
    - [parse_error, [], {}]

  handle examples in examples_hash 1:
    success: true
    input: |
      Feature: handle examples in examples_hash a
      Scenario Outline: handle examples in examples_hash b
      Examples: handle examples in examples_hash c
      | examples | in | examples_hash | d |
      Examples: handle examples in examples_hash f
      | examples | in | examples_hash | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in examples_hash a], {}]
    - [start_outline, [handle examples in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle examples in examples_hash c], {}]
    - [start_hash, [examples, in, examples_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [start_examples, [handle examples in examples_hash f], {}]
    - [start_hash, [examples, in, examples_hash, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle examples in examples_hash 2:
    success: true
    input: |
      Feature: handle examples in examples_hash a
      Scenario Outline: handle examples in examples_hash b
      Examples: handle examples in examples_hash c
      | examples | in | examples_hash | d |
      Scenarios: handle examples in examples_hash g
      | examples | in | examples_hash | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in examples_hash a], {}]
    - [start_outline, [handle examples in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle examples in examples_hash c], {}]
    - [start_hash, [examples, in, examples_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [start_examples, [handle examples in examples_hash g], {}]
    - [start_hash, [examples, in, examples_hash, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle feature in examples_hash:
    success: false
    input: |
      Feature: handle feature in examples_hash a
      Scenario Outline: handle feature in examples_hash b
      Examples: handle feature in examples_hash c
      | feature | in | examples_hash | d |
      Feature: handle feature in examples_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle feature in examples_hash a], {}]
    - [start_outline, [handle feature in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle feature in examples_hash c], {}]
    - [start_hash, [feature, in, examples_hash, d], {}]
    - [parse_error, [], {}]

  handle hash in examples_hash:
    success: true
    input: |
      Feature: handle hash in examples_hash a
      Scenario Outline: handle hash in examples_hash b
      Examples: handle hash in examples_hash c
      | hash | in | examples_hash | d |
      | hash | in | examples_hash | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle hash in examples_hash a], {}]
    - [start_outline, [handle hash in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle hash in examples_hash c], {}]
    - [start_hash, [hash, in, examples_hash, d], {}]
    - [hash_data, [hash, in, examples_hash, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline in examples_hash:
    success: false
    input: |
      Feature: handle multiline in examples_hash a
      Scenario Outline: handle multiline in examples_hash b
      Examples: handle multiline in examples_hash c
      | multiline | in | examples_hash | d |
      """
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline in examples_hash a], {}]
    - [start_outline, [handle multiline in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle multiline in examples_hash c], {}]
    - [start_hash, [multiline, in, examples_hash, d], {}]
    - [parse_error, [], {}]

  handle outline in examples_hash:
    success: true
    input: |
      Feature: handle outline in examples_hash a
      Scenario Outline: handle outline in examples_hash b
      Examples: handle outline in examples_hash c
      | outline | in | examples_hash | d |
      Scenario Outline: handle outline in examples_hash g
      Examples: handle outline in examples_hash e
      | outline | in | examples_hash | f |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in examples_hash a], {}]
    - [start_outline, [handle outline in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle outline in examples_hash c], {}]
    - [start_hash, [outline, in, examples_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [start_outline, [handle outline in examples_hash g], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle outline in examples_hash e], {}]
    - [start_hash, [outline, in, examples_hash, f], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle scenario in examples_hash:
    success: true
    input: |
      Feature: handle scenario in examples_hash a
      Scenario Outline: handle scenario in examples_hash b
      Examples: handle scenario in examples_hash c
      | scenario | in | examples_hash | d |
      Scenario: handle scenario in examples_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in examples_hash a], {}]
    - [start_outline, [handle scenario in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle scenario in examples_hash c], {}]
    - [start_hash, [scenario, in, examples_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [start_scenario, [handle scenario in examples_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in examples_hash 1:
    success: false
    input: |
      Feature: handle step in examples_hash a
      Scenario Outline: handle step in examples_hash b
      Examples: handle step in examples_hash c
      | step | in | examples_hash | d |
      Given handle step in examples_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in examples_hash a], {}]
    - [start_outline, [handle step in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in examples_hash c], {}]
    - [start_hash, [step, in, examples_hash, d], {}]
    - [parse_error, [], {}]

  handle step in examples_hash 2:
    success: false
    input: |
      Feature: handle step in examples_hash a
      Scenario Outline: handle step in examples_hash b
      Examples: handle step in examples_hash c
      | step | in | examples_hash | d |
      When handle step in examples_hash f

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in examples_hash a], {}]
    - [start_outline, [handle step in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in examples_hash c], {}]
    - [start_hash, [step, in, examples_hash, d], {}]
    - [parse_error, [], {}]

  handle step in examples_hash 3:
    success: false
    input: |
      Feature: handle step in examples_hash a
      Scenario Outline: handle step in examples_hash b
      Examples: handle step in examples_hash c
      | step | in | examples_hash | d |
      Then handle step in examples_hash g

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in examples_hash a], {}]
    - [start_outline, [handle step in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in examples_hash c], {}]
    - [start_hash, [step, in, examples_hash, d], {}]
    - [parse_error, [], {}]

  handle step in examples_hash 4:
    success: false
    input: |
      Feature: handle step in examples_hash a
      Scenario Outline: handle step in examples_hash b
      Examples: handle step in examples_hash c
      | step | in | examples_hash | d |
      And handle step in examples_hash h

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in examples_hash a], {}]
    - [start_outline, [handle step in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in examples_hash c], {}]
    - [start_hash, [step, in, examples_hash, d], {}]
    - [parse_error, [], {}]

  handle step in examples_hash 5:
    success: false
    input: |
      Feature: handle step in examples_hash a
      Scenario Outline: handle step in examples_hash b
      Examples: handle step in examples_hash c
      | step | in | examples_hash | d |
      But handle step in examples_hash i

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in examples_hash a], {}]
    - [start_outline, [handle step in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in examples_hash c], {}]
    - [start_hash, [step, in, examples_hash, d], {}]
    - [parse_error, [], {}]

  handle tags in examples_hash 1:
    success: true
    input: |
      Feature: handle tags in examples_hash a
      Scenario Outline: handle tags in examples_hash b
      Examples: handle tags in examples_hash c
      | tags | in | examples_hash | d |
      @tag_0
      Scenario: handle tags in examples_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in examples_hash a], {}]
    - [start_outline, [handle tags in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle tags in examples_hash c], {}]
    - [start_hash, [tags, in, examples_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle tags in examples_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in examples_hash 2:
    success: true
    input: |
      Feature: handle tags in examples_hash a
      Scenario Outline: handle tags in examples_hash b
      Examples: handle tags in examples_hash c
      | tags | in | examples_hash | d |
      @tag_1 @tag_2
      Scenario: handle tags in examples_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in examples_hash a], {}]
    - [start_outline, [handle tags in examples_hash b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle tags in examples_hash c], {}]
    - [start_hash, [tags, in, examples_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_scenario, [handle tags in examples_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle background in feature:
    success: true
    input: |
      Feature: handle background in feature a
      Background: handle background in feature c
      Scenario: handle background in feature b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle background in feature a], {}]
    - [start_background, [handle background in feature c], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle background in feature b], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle comment in feature:
    success: true
    input: |
      Feature: handle comment in feature a
      # handle comment in feature b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in feature a], {}]
    - [comment, ['# handle comment in feature b'], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in feature:
    success: true
    input: |
      Feature: handle description in feature a
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in feature a], {}]
    - [start_description, [], {}]
    - [data, [some lines], {}]
    - [data, [of description], {}]
    - [finish_description, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle outline in feature:
    success: true
    input: |
      Feature: handle outline in feature a
      Scenario Outline: handle outline in feature d
      Examples: handle outline in feature b
      | outline | in | feature | c |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in feature a], {}]
    - [start_outline, [handle outline in feature d], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle outline in feature b], {}]
    - [start_hash, [outline, in, feature, c], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle scenario in feature:
    success: true
    input: |
      Feature: handle scenario in feature a
      Scenario: handle scenario in feature b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in feature a], {}]
    - [start_scenario, [handle scenario in feature b], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in feature 1:
    success: true
    input: |
      Feature: handle tags in feature a
      @tag_0
      Scenario: handle tags in feature b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in feature a], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle tags in feature b], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in feature 2:
    success: true
    input: |
      Feature: handle tags in feature a
      @tag_1 @tag_2
      Scenario: handle tags in feature b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in feature a], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_scenario, [handle tags in feature b], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle background in hash:
    success: true
    input: |
      Feature: handle background in hash a
      Scenario: handle background in hash b
      Given handle background in hash c
      | background | in | hash | d |
      Background: handle background in hash f
      Scenario: handle background in hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle background in hash a], {}]
    - [start_scenario, [handle background in hash b], {}]
    - [start_step, [Given, handle background in hash c], {}]
    - [start_hash, [background, in, hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [start_background, [handle background in hash f], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle background in hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle comment in hash:
    success: true
    input: |
      Feature: handle comment in hash a
      Scenario: handle comment in hash b
      Given handle comment in hash c
      | comment | in | hash | d |
      # handle comment in hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in hash a], {}]
    - [start_scenario, [handle comment in hash b], {}]
    - [start_step, [Given, handle comment in hash c], {}]
    - [start_hash, [comment, in, hash, d], {}]
    - [comment, ['# handle comment in hash e'], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in hash:
    success: false
    input: |
      Feature: handle description in hash a
      Scenario: handle description in hash b
      Given handle description in hash c
      | description | in | hash | d |
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in hash a], {}]
    - [start_scenario, [handle description in hash b], {}]
    - [start_step, [Given, handle description in hash c], {}]
    - [start_hash, [description, in, hash, d], {}]
    - [parse_error, [], {}]

  handle examples in hash 1:
    success: false
    input: |
      Feature: handle examples in hash a
      Scenario: handle examples in hash b
      Given handle examples in hash c
      | examples | in | hash | d |
      Examples: handle examples in hash f
      | examples | in | hash | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in hash a], {}]
    - [start_scenario, [handle examples in hash b], {}]
    - [start_step, [Given, handle examples in hash c], {}]
    - [start_hash, [examples, in, hash, d], {}]
    - [parse_error, [], {}]

  handle examples in hash 2:
    success: false
    input: |
      Feature: handle examples in hash a
      Scenario: handle examples in hash b
      Given handle examples in hash c
      | examples | in | hash | d |
      Scenarios: handle examples in hash g
      | examples | in | hash | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in hash a], {}]
    - [start_scenario, [handle examples in hash b], {}]
    - [start_step, [Given, handle examples in hash c], {}]
    - [start_hash, [examples, in, hash, d], {}]
    - [parse_error, [], {}]

  handle feature in hash:
    success: false
    input: |
      Feature: handle feature in hash a
      Scenario: handle feature in hash b
      Given handle feature in hash c
      | feature | in | hash | d |
      Feature: handle feature in hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle feature in hash a], {}]
    - [start_scenario, [handle feature in hash b], {}]
    - [start_step, [Given, handle feature in hash c], {}]
    - [start_hash, [feature, in, hash, d], {}]
    - [parse_error, [], {}]

  handle hash in hash:
    success: true
    input: |
      Feature: handle hash in hash a
      Scenario: handle hash in hash b
      Given handle hash in hash c
      | hash | in | hash | d |
      | hash | in | hash | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle hash in hash a], {}]
    - [start_scenario, [handle hash in hash b], {}]
    - [start_step, [Given, handle hash in hash c], {}]
    - [start_hash, [hash, in, hash, d], {}]
    - [hash_data, [hash, in, hash, e], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline in hash:
    success: false
    input: |
      Feature: handle multiline in hash a
      Scenario: handle multiline in hash b
      Given handle multiline in hash c
      | multiline | in | hash | d |
      """
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline in hash a], {}]
    - [start_scenario, [handle multiline in hash b], {}]
    - [start_step, [Given, handle multiline in hash c], {}]
    - [start_hash, [multiline, in, hash, d], {}]
    - [parse_error, [], {}]

  handle outline in hash:
    success: true
    input: |
      Feature: handle outline in hash a
      Scenario: handle outline in hash b
      Given handle outline in hash c
      | outline | in | hash | d |
      Scenario Outline: handle outline in hash g
      Examples: handle outline in hash e
      | outline | in | hash | f |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in hash a], {}]
    - [start_scenario, [handle outline in hash b], {}]
    - [start_step, [Given, handle outline in hash c], {}]
    - [start_hash, [outline, in, hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [start_outline, [handle outline in hash g], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle outline in hash e], {}]
    - [start_hash, [outline, in, hash, f], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle scenario in hash:
    success: true
    input: |
      Feature: handle scenario in hash a
      Scenario: handle scenario in hash b
      Given handle scenario in hash c
      | scenario | in | hash | d |
      Scenario: handle scenario in hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in hash a], {}]
    - [start_scenario, [handle scenario in hash b], {}]
    - [start_step, [Given, handle scenario in hash c], {}]
    - [start_hash, [scenario, in, hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [start_scenario, [handle scenario in hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in hash 1:
    success: true
    input: |
      Feature: handle step in hash a
      Scenario: handle step in hash b
      Given handle step in hash c
      | step | in | hash | d |
      Given handle step in hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in hash a], {}]
    - [start_scenario, [handle step in hash b], {}]
    - [start_step, [Given, handle step in hash c], {}]
    - [start_hash, [step, in, hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [Given, handle step in hash e], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in hash 2:
    success: true
    input: |
      Feature: handle step in hash a
      Scenario: handle step in hash b
      Given handle step in hash c
      | step | in | hash | d |
      When handle step in hash f

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in hash a], {}]
    - [start_scenario, [handle step in hash b], {}]
    - [start_step, [Given, handle step in hash c], {}]
    - [start_hash, [step, in, hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [When, handle step in hash f], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in hash 3:
    success: true
    input: |
      Feature: handle step in hash a
      Scenario: handle step in hash b
      Given handle step in hash c
      | step | in | hash | d |
      Then handle step in hash g

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in hash a], {}]
    - [start_scenario, [handle step in hash b], {}]
    - [start_step, [Given, handle step in hash c], {}]
    - [start_hash, [step, in, hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [Then, handle step in hash g], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in hash 4:
    success: true
    input: |
      Feature: handle step in hash a
      Scenario: handle step in hash b
      Given handle step in hash c
      | step | in | hash | d |
      And handle step in hash h

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in hash a], {}]
    - [start_scenario, [handle step in hash b], {}]
    - [start_step, [Given, handle step in hash c], {}]
    - [start_hash, [step, in, hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [And, handle step in hash h], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in hash 5:
    success: true
    input: |
      Feature: handle step in hash a
      Scenario: handle step in hash b
      Given handle step in hash c
      | step | in | hash | d |
      But handle step in hash i

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in hash a], {}]
    - [start_scenario, [handle step in hash b], {}]
    - [start_step, [Given, handle step in hash c], {}]
    - [start_hash, [step, in, hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [But, handle step in hash i], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in hash 1:
    success: true
    input: |
      Feature: handle tags in hash a
      Scenario: handle tags in hash b
      Given handle tags in hash c
      | tags | in | hash | d |
      @tag_0
      Scenario: handle tags in hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in hash a], {}]
    - [start_scenario, [handle tags in hash b], {}]
    - [start_step, [Given, handle tags in hash c], {}]
    - [start_hash, [tags, in, hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle tags in hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in hash 2:
    success: true
    input: |
      Feature: handle tags in hash a
      Scenario: handle tags in hash b
      Given handle tags in hash c
      | tags | in | hash | d |
      @tag_1 @tag_2
      Scenario: handle tags in hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in hash a], {}]
    - [start_scenario, [handle tags in hash b], {}]
    - [start_step, [Given, handle tags in hash c], {}]
    - [start_hash, [tags, in, hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_scenario, [handle tags in hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline_data in multiline:
    success: true
    input: |
      Feature: handle multiline_data in multiline a
      Scenario: handle multiline_data in multiline b
      Given handle multiline_data in multiline c
      """
        random text
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline_data in multiline a], {}]
    - [start_scenario, [handle multiline_data in multiline b], {}]
    - [start_step, [Given, handle multiline_data in multiline c], {}]
    - [start_multiline, [0], {}]
    - [data, ['  random text

      '], {}]
    - [finish_multiline, [], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline_end in multiline:
    success: true
    input: |
      Feature: handle multiline_end in multiline a
      Scenario: handle multiline_end in multiline b
      Given handle multiline_end in multiline c
      """
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline_end in multiline a], {}]
    - [start_scenario, [handle multiline_end in multiline b], {}]
    - [start_step, [Given, handle multiline_end in multiline c], {}]
    - [start_multiline, [0], {}]
    - [finish_multiline, [], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle background in outline:
    success: false
    input: |
      Feature: handle background in outline a
      Scenario Outline: handle background in outline b
      Background: handle background in outline d
      Scenario: handle background in outline c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle background in outline a], {}]
    - [start_outline, [handle background in outline b], {}]
    - [parse_error, [], {}]

  handle comment in outline:
    success: true
    input: |
      Feature: handle comment in outline a
      Scenario Outline: handle comment in outline b
      # handle comment in outline e
      Examples: handle comment in outline c
      | comment | in | outline | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in outline a], {}]
    - [start_outline, [handle comment in outline b], {}]
    - [comment, ['# handle comment in outline e

      '], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle comment in outline c], {}]
    - [start_hash, [comment, in, outline, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in outline:
    success: false
    input: |
      Feature: handle description in outline a
      Scenario Outline: handle description in outline b
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in outline a], {}]
    - [start_outline, [handle description in outline b], {}]
    - [parse_error, [], {}]

  handle examples in outline 1:
    success: true
    input: |
      Feature: handle examples in outline a
      Scenario Outline: handle examples in outline b
      Examples: handle examples in outline d
      | examples | in | outline | c |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in outline a], {}]
    - [start_outline, [handle examples in outline b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle examples in outline d], {}]
    - [start_hash, [examples, in, outline, c], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle examples in outline 2:
    success: true
    input: |
      Feature: handle examples in outline a
      Scenario Outline: handle examples in outline b
      Scenarios: handle examples in outline e
      | examples | in | outline | c |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in outline a], {}]
    - [start_outline, [handle examples in outline b], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle examples in outline e], {}]
    - [start_hash, [examples, in, outline, c], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle feature in outline:
    success: false
    input: |
      Feature: handle feature in outline a
      Scenario Outline: handle feature in outline b
      Feature: handle feature in outline c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle feature in outline a], {}]
    - [start_outline, [handle feature in outline b], {}]
    - [parse_error, [], {}]

  handle hash in outline:
    success: false
    input: |
      Feature: handle hash in outline a
      Scenario Outline: handle hash in outline b
      | hash | in | outline | c |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle hash in outline a], {}]
    - [start_outline, [handle hash in outline b], {}]
    - [parse_error, [], {}]

  handle multiline in outline:
    success: false
    input: |
      Feature: handle multiline in outline a
      Scenario Outline: handle multiline in outline b
      """
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline in outline a], {}]
    - [start_outline, [handle multiline in outline b], {}]
    - [parse_error, [], {}]

  handle outline in outline:
    success: false
    input: |
      Feature: handle outline in outline a
      Scenario Outline: handle outline in outline b
      Scenario Outline: handle outline in outline e
      Examples: handle outline in outline c
      | outline | in | outline | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in outline a], {}]
    - [start_outline, [handle outline in outline b], {}]
    - [parse_error, [], {}]

  handle scenario in outline:
    success: false
    input: |
      Feature: handle scenario in outline a
      Scenario Outline: handle scenario in outline b
      Scenario: handle scenario in outline c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in outline a], {}]
    - [start_outline, [handle scenario in outline b], {}]
    - [parse_error, [], {}]

  handle step in outline 1:
    success: true
    input: |
      Feature: handle step in outline a
      Scenario Outline: handle step in outline b
      Given handle step in outline e
      Examples: handle step in outline c
      | step | in | outline | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline a], {}]
    - [start_outline, [handle step in outline b], {}]
    - [start_step, [Given, handle step in outline e], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline c], {}]
    - [start_hash, [step, in, outline, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in outline 2:
    success: true
    input: |
      Feature: handle step in outline a
      Scenario Outline: handle step in outline b
      When handle step in outline f
      Examples: handle step in outline c
      | step | in | outline | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline a], {}]
    - [start_outline, [handle step in outline b], {}]
    - [start_step, [When, handle step in outline f], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline c], {}]
    - [start_hash, [step, in, outline, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in outline 3:
    success: true
    input: |
      Feature: handle step in outline a
      Scenario Outline: handle step in outline b
      Then handle step in outline g
      Examples: handle step in outline c
      | step | in | outline | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline a], {}]
    - [start_outline, [handle step in outline b], {}]
    - [start_step, [Then, handle step in outline g], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline c], {}]
    - [start_hash, [step, in, outline, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in outline 4:
    success: true
    input: |
      Feature: handle step in outline a
      Scenario Outline: handle step in outline b
      And handle step in outline h
      Examples: handle step in outline c
      | step | in | outline | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline a], {}]
    - [start_outline, [handle step in outline b], {}]
    - [start_step, [And, handle step in outline h], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline c], {}]
    - [start_hash, [step, in, outline, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in outline 5:
    success: true
    input: |
      Feature: handle step in outline a
      Scenario Outline: handle step in outline b
      But handle step in outline i
      Examples: handle step in outline c
      | step | in | outline | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline a], {}]
    - [start_outline, [handle step in outline b], {}]
    - [start_step, [But, handle step in outline i], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline c], {}]
    - [start_hash, [step, in, outline, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in outline 1:
    success: true
    input: |
      Feature: handle tags in outline a
      Scenario Outline: handle tags in outline b
      @tag_0
      Scenario: handle tags in outline c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in outline a], {}]
    - [start_outline, [handle tags in outline b], {}]
    - [finish_outline, [], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle tags in outline c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in outline 2:
    success: true
    input: |
      Feature: handle tags in outline a
      Scenario Outline: handle tags in outline b
      @tag_1 @tag_2
      Scenario: handle tags in outline c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in outline a], {}]
    - [start_outline, [handle tags in outline b], {}]
    - [finish_outline, [], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_scenario, [handle tags in outline c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle background in outline_hash:
    success: false
    input: |
      Feature: handle background in outline_hash a
      Scenario Outline: handle background in outline_hash b
      Given handle background in outline_hash c
      | background | in | outline_hash | d |
      Background: handle background in outline_hash f
      Scenario: handle background in outline_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle background in outline_hash a], {}]
    - [start_outline, [handle background in outline_hash b], {}]
    - [start_step, [Given, handle background in outline_hash c], {}]
    - [start_hash, [background, in, outline_hash, d], {}]
    - [parse_error, [], {}]

  handle comment in outline_hash:
    success: true
    input: |
      Feature: handle comment in outline_hash a
      Scenario Outline: handle comment in outline_hash b
      Given handle comment in outline_hash c
      | comment | in | outline_hash | d |
      # handle comment in outline_hash g
      Examples: handle comment in outline_hash e
      | comment | in | outline_hash | f |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in outline_hash a], {}]
    - [start_outline, [handle comment in outline_hash b], {}]
    - [start_step, [Given, handle comment in outline_hash c], {}]
    - [start_hash, [comment, in, outline_hash, d], {}]
    - [comment, ['# handle comment in outline_hash g

      '], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle comment in outline_hash e], {}]
    - [start_hash, [comment, in, outline_hash, f], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in outline_hash:
    success: false
    input: |
      Feature: handle description in outline_hash a
      Scenario Outline: handle description in outline_hash b
      Given handle description in outline_hash c
      | description | in | outline_hash | d |
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in outline_hash a], {}]
    - [start_outline, [handle description in outline_hash b], {}]
    - [start_step, [Given, handle description in outline_hash c], {}]
    - [start_hash, [description, in, outline_hash, d], {}]
    - [parse_error, [], {}]

  handle examples in outline_hash 1:
    success: true
    input: |
      Feature: handle examples in outline_hash a
      Scenario Outline: handle examples in outline_hash b
      Given handle examples in outline_hash c
      | examples | in | outline_hash | d |
      Examples: handle examples in outline_hash f
      | examples | in | outline_hash | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in outline_hash a], {}]
    - [start_outline, [handle examples in outline_hash b], {}]
    - [start_step, [Given, handle examples in outline_hash c], {}]
    - [start_hash, [examples, in, outline_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle examples in outline_hash f], {}]
    - [start_hash, [examples, in, outline_hash, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle examples in outline_hash 2:
    success: true
    input: |
      Feature: handle examples in outline_hash a
      Scenario Outline: handle examples in outline_hash b
      Given handle examples in outline_hash c
      | examples | in | outline_hash | d |
      Scenarios: handle examples in outline_hash g
      | examples | in | outline_hash | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in outline_hash a], {}]
    - [start_outline, [handle examples in outline_hash b], {}]
    - [start_step, [Given, handle examples in outline_hash c], {}]
    - [start_hash, [examples, in, outline_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle examples in outline_hash g], {}]
    - [start_hash, [examples, in, outline_hash, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle feature in outline_hash:
    success: false
    input: |
      Feature: handle feature in outline_hash a
      Scenario Outline: handle feature in outline_hash b
      Given handle feature in outline_hash c
      | feature | in | outline_hash | d |
      Feature: handle feature in outline_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle feature in outline_hash a], {}]
    - [start_outline, [handle feature in outline_hash b], {}]
    - [start_step, [Given, handle feature in outline_hash c], {}]
    - [start_hash, [feature, in, outline_hash, d], {}]
    - [parse_error, [], {}]

  handle hash in outline_hash:
    success: true
    input: |
      Feature: handle hash in outline_hash a
      Scenario Outline: handle hash in outline_hash b
      Given handle hash in outline_hash c
      | hash | in | outline_hash | d |
      | hash | in | outline_hash | g |
      Examples: handle hash in outline_hash e
      | hash | in | outline_hash | f |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle hash in outline_hash a], {}]
    - [start_outline, [handle hash in outline_hash b], {}]
    - [start_step, [Given, handle hash in outline_hash c], {}]
    - [start_hash, [hash, in, outline_hash, d], {}]
    - [hash_data, [hash, in, outline_hash, g], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle hash in outline_hash e], {}]
    - [start_hash, [hash, in, outline_hash, f], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline in outline_hash:
    success: false
    input: |
      Feature: handle multiline in outline_hash a
      Scenario Outline: handle multiline in outline_hash b
      Given handle multiline in outline_hash c
      | multiline | in | outline_hash | d |
      """
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline in outline_hash a], {}]
    - [start_outline, [handle multiline in outline_hash b], {}]
    - [start_step, [Given, handle multiline in outline_hash c], {}]
    - [start_hash, [multiline, in, outline_hash, d], {}]
    - [parse_error, [], {}]

  handle outline in outline_hash:
    success: false
    input: |
      Feature: handle outline in outline_hash a
      Scenario Outline: handle outline in outline_hash b
      Given handle outline in outline_hash c
      | outline | in | outline_hash | d |
      Scenario Outline: handle outline in outline_hash g
      Examples: handle outline in outline_hash e
      | outline | in | outline_hash | f |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in outline_hash a], {}]
    - [start_outline, [handle outline in outline_hash b], {}]
    - [start_step, [Given, handle outline in outline_hash c], {}]
    - [start_hash, [outline, in, outline_hash, d], {}]
    - [parse_error, [], {}]

  handle scenario in outline_hash:
    success: false
    input: |
      Feature: handle scenario in outline_hash a
      Scenario Outline: handle scenario in outline_hash b
      Given handle scenario in outline_hash c
      | scenario | in | outline_hash | d |
      Scenario: handle scenario in outline_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in outline_hash a], {}]
    - [start_outline, [handle scenario in outline_hash b], {}]
    - [start_step, [Given, handle scenario in outline_hash c], {}]
    - [start_hash, [scenario, in, outline_hash, d], {}]
    - [parse_error, [], {}]

  handle step in outline_hash 1:
    success: true
    input: |
      Feature: handle step in outline_hash a
      Scenario Outline: handle step in outline_hash b
      Given handle step in outline_hash c
      | step | in | outline_hash | d |
      Given handle step in outline_hash g
      Examples: handle step in outline_hash e
      | step | in | outline_hash | f |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline_hash a], {}]
    - [start_outline, [handle step in outline_hash b], {}]
    - [start_step, [Given, handle step in outline_hash c], {}]
    - [start_hash, [step, in, outline_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [Given, handle step in outline_hash g], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline_hash e], {}]
    - [start_hash, [step, in, outline_hash, f], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in outline_hash 2:
    success: true
    input: |
      Feature: handle step in outline_hash a
      Scenario Outline: handle step in outline_hash b
      Given handle step in outline_hash c
      | step | in | outline_hash | d |
      When handle step in outline_hash h
      Examples: handle step in outline_hash e
      | step | in | outline_hash | f |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline_hash a], {}]
    - [start_outline, [handle step in outline_hash b], {}]
    - [start_step, [Given, handle step in outline_hash c], {}]
    - [start_hash, [step, in, outline_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [When, handle step in outline_hash h], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline_hash e], {}]
    - [start_hash, [step, in, outline_hash, f], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in outline_hash 3:
    success: true
    input: |
      Feature: handle step in outline_hash a
      Scenario Outline: handle step in outline_hash b
      Given handle step in outline_hash c
      | step | in | outline_hash | d |
      Then handle step in outline_hash i
      Examples: handle step in outline_hash e
      | step | in | outline_hash | f |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline_hash a], {}]
    - [start_outline, [handle step in outline_hash b], {}]
    - [start_step, [Given, handle step in outline_hash c], {}]
    - [start_hash, [step, in, outline_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [Then, handle step in outline_hash i], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline_hash e], {}]
    - [start_hash, [step, in, outline_hash, f], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in outline_hash 4:
    success: true
    input: |
      Feature: handle step in outline_hash a
      Scenario Outline: handle step in outline_hash b
      Given handle step in outline_hash c
      | step | in | outline_hash | d |
      And handle step in outline_hash j
      Examples: handle step in outline_hash e
      | step | in | outline_hash | f |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline_hash a], {}]
    - [start_outline, [handle step in outline_hash b], {}]
    - [start_step, [Given, handle step in outline_hash c], {}]
    - [start_hash, [step, in, outline_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [And, handle step in outline_hash j], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline_hash e], {}]
    - [start_hash, [step, in, outline_hash, f], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in outline_hash 5:
    success: true
    input: |
      Feature: handle step in outline_hash a
      Scenario Outline: handle step in outline_hash b
      Given handle step in outline_hash c
      | step | in | outline_hash | d |
      But handle step in outline_hash k
      Examples: handle step in outline_hash e
      | step | in | outline_hash | f |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline_hash a], {}]
    - [start_outline, [handle step in outline_hash b], {}]
    - [start_step, [Given, handle step in outline_hash c], {}]
    - [start_hash, [step, in, outline_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [start_step, [But, handle step in outline_hash k], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline_hash e], {}]
    - [start_hash, [step, in, outline_hash, f], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in outline_hash 1:
    success: true
    input: |
      Feature: handle tags in outline_hash a
      Scenario Outline: handle tags in outline_hash b
      Given handle tags in outline_hash c
      | tags | in | outline_hash | d |
      @tag_0
      Scenario: handle tags in outline_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in outline_hash a], {}]
    - [start_outline, [handle tags in outline_hash b], {}]
    - [start_step, [Given, handle tags in outline_hash c], {}]
    - [start_hash, [tags, in, outline_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle tags in outline_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in outline_hash 2:
    success: true
    input: |
      Feature: handle tags in outline_hash a
      Scenario Outline: handle tags in outline_hash b
      Given handle tags in outline_hash c
      | tags | in | outline_hash | d |
      @tag_1 @tag_2
      Scenario: handle tags in outline_hash e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in outline_hash a], {}]
    - [start_outline, [handle tags in outline_hash b], {}]
    - [start_step, [Given, handle tags in outline_hash c], {}]
    - [start_hash, [tags, in, outline_hash, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_scenario, [handle tags in outline_hash e], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline_data in outline_multiline:
    success: true
    input: |
      Feature: handle multiline_data in outline_multiline a
      Scenario Outline: handle multiline_data in outline_multiline b
      Given handle multiline_data in outline_multiline c
      """
        random text
      """
      Examples: handle multiline_data in outline_multiline d
      | multiline_data | in | outline_multiline | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline_data in outline_multiline a], {}]
    - [start_outline, [handle multiline_data in outline_multiline b], {}]
    - [start_step, [Given, handle multiline_data in outline_multiline c], {}]
    - [start_multiline, [0], {}]
    - [data, ['  random text

      '], {}]
    - [finish_multiline, [], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle multiline_data in outline_multiline d], {}]
    - [start_hash, [multiline_data, in, outline_multiline, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline_end in outline_multiline:
    success: true
    input: |
      Feature: handle multiline_end in outline_multiline a
      Scenario Outline: handle multiline_end in outline_multiline b
      Given handle multiline_end in outline_multiline c
      """
      """
      Examples: handle multiline_end in outline_multiline d
      | multiline_end | in | outline_multiline | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline_end in outline_multiline a], {}]
    - [start_outline, [handle multiline_end in outline_multiline b], {}]
    - [start_step, [Given, handle multiline_end in outline_multiline c], {}]
    - [start_multiline, [0], {}]
    - [finish_multiline, [], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle multiline_end in outline_multiline d], {}]
    - [start_hash, [multiline_end, in, outline_multiline, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle background in outline_step:
    success: false
    input: |
      Feature: handle background in outline_step a
      Scenario Outline: handle background in outline_step b
      Given handle background in outline_step c
      Background: handle background in outline_step e
      Scenario: handle background in outline_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle background in outline_step a], {}]
    - [start_outline, [handle background in outline_step b], {}]
    - [start_step, [Given, handle background in outline_step c], {}]
    - [parse_error, [], {}]

  handle comment in outline_step:
    success: true
    input: |
      Feature: handle comment in outline_step a
      Scenario Outline: handle comment in outline_step b
      Given handle comment in outline_step c
      # handle comment in outline_step f
      Examples: handle comment in outline_step d
      | comment | in | outline_step | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in outline_step a], {}]
    - [start_outline, [handle comment in outline_step b], {}]
    - [start_step, [Given, handle comment in outline_step c], {}]
    - [comment, ['# handle comment in outline_step f

      '], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle comment in outline_step d], {}]
    - [start_hash, [comment, in, outline_step, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in outline_step:
    success: false
    input: |
      Feature: handle description in outline_step a
      Scenario Outline: handle description in outline_step b
      Given handle description in outline_step c
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in outline_step a], {}]
    - [start_outline, [handle description in outline_step b], {}]
    - [start_step, [Given, handle description in outline_step c], {}]
    - [parse_error, [], {}]

  handle examples in outline_step 1:
    success: true
    input: |
      Feature: handle examples in outline_step a
      Scenario Outline: handle examples in outline_step b
      Given handle examples in outline_step c
      Examples: handle examples in outline_step e
      | examples | in | outline_step | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in outline_step a], {}]
    - [start_outline, [handle examples in outline_step b], {}]
    - [start_step, [Given, handle examples in outline_step c], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle examples in outline_step e], {}]
    - [start_hash, [examples, in, outline_step, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle examples in outline_step 2:
    success: true
    input: |
      Feature: handle examples in outline_step a
      Scenario Outline: handle examples in outline_step b
      Given handle examples in outline_step c
      Scenarios: handle examples in outline_step f
      | examples | in | outline_step | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in outline_step a], {}]
    - [start_outline, [handle examples in outline_step b], {}]
    - [start_step, [Given, handle examples in outline_step c], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle examples in outline_step f], {}]
    - [start_hash, [examples, in, outline_step, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle feature in outline_step:
    success: false
    input: |
      Feature: handle feature in outline_step a
      Scenario Outline: handle feature in outline_step b
      Given handle feature in outline_step c
      Feature: handle feature in outline_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle feature in outline_step a], {}]
    - [start_outline, [handle feature in outline_step b], {}]
    - [start_step, [Given, handle feature in outline_step c], {}]
    - [parse_error, [], {}]

  handle hash in outline_step:
    success: true
    input: |
      Feature: handle hash in outline_step a
      Scenario Outline: handle hash in outline_step b
      Given handle hash in outline_step c
      | hash | in | outline_step | f |
      Examples: handle hash in outline_step d
      | hash | in | outline_step | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle hash in outline_step a], {}]
    - [start_outline, [handle hash in outline_step b], {}]
    - [start_step, [Given, handle hash in outline_step c], {}]
    - [start_hash, [hash, in, outline_step, f], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle hash in outline_step d], {}]
    - [start_hash, [hash, in, outline_step, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline in outline_step:
    success: true
    input: |
      Feature: handle multiline in outline_step a
      Scenario Outline: handle multiline in outline_step b
      Given handle multiline in outline_step c
      """
      """
      Examples: handle multiline in outline_step d
      | multiline | in | outline_step | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline in outline_step a], {}]
    - [start_outline, [handle multiline in outline_step b], {}]
    - [start_step, [Given, handle multiline in outline_step c], {}]
    - [start_multiline, [0], {}]
    - [finish_multiline, [], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle multiline in outline_step d], {}]
    - [start_hash, [multiline, in, outline_step, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle outline in outline_step:
    success: false
    input: |
      Feature: handle outline in outline_step a
      Scenario Outline: handle outline in outline_step b
      Given handle outline in outline_step c
      Scenario Outline: handle outline in outline_step f
      Examples: handle outline in outline_step d
      | outline | in | outline_step | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in outline_step a], {}]
    - [start_outline, [handle outline in outline_step b], {}]
    - [start_step, [Given, handle outline in outline_step c], {}]
    - [parse_error, [], {}]

  handle scenario in outline_step:
    success: false
    input: |
      Feature: handle scenario in outline_step a
      Scenario Outline: handle scenario in outline_step b
      Given handle scenario in outline_step c
      Scenario: handle scenario in outline_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in outline_step a], {}]
    - [start_outline, [handle scenario in outline_step b], {}]
    - [start_step, [Given, handle scenario in outline_step c], {}]
    - [parse_error, [], {}]

  handle step in outline_step 1:
    success: true
    input: |
      Feature: handle step in outline_step a
      Scenario Outline: handle step in outline_step b
      Given handle step in outline_step c
      Given handle step in outline_step f
      Examples: handle step in outline_step d
      | step | in | outline_step | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline_step a], {}]
    - [start_outline, [handle step in outline_step b], {}]
    - [start_step, [Given, handle step in outline_step c], {}]
    - [finish_step, [], {}]
    - [start_step, [Given, handle step in outline_step f], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline_step d], {}]
    - [start_hash, [step, in, outline_step, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in outline_step 2:
    success: true
    input: |
      Feature: handle step in outline_step a
      Scenario Outline: handle step in outline_step b
      Given handle step in outline_step c
      When handle step in outline_step g
      Examples: handle step in outline_step d
      | step | in | outline_step | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline_step a], {}]
    - [start_outline, [handle step in outline_step b], {}]
    - [start_step, [Given, handle step in outline_step c], {}]
    - [finish_step, [], {}]
    - [start_step, [When, handle step in outline_step g], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline_step d], {}]
    - [start_hash, [step, in, outline_step, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in outline_step 3:
    success: true
    input: |
      Feature: handle step in outline_step a
      Scenario Outline: handle step in outline_step b
      Given handle step in outline_step c
      Then handle step in outline_step h
      Examples: handle step in outline_step d
      | step | in | outline_step | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline_step a], {}]
    - [start_outline, [handle step in outline_step b], {}]
    - [start_step, [Given, handle step in outline_step c], {}]
    - [finish_step, [], {}]
    - [start_step, [Then, handle step in outline_step h], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline_step d], {}]
    - [start_hash, [step, in, outline_step, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in outline_step 4:
    success: true
    input: |
      Feature: handle step in outline_step a
      Scenario Outline: handle step in outline_step b
      Given handle step in outline_step c
      And handle step in outline_step i
      Examples: handle step in outline_step d
      | step | in | outline_step | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline_step a], {}]
    - [start_outline, [handle step in outline_step b], {}]
    - [start_step, [Given, handle step in outline_step c], {}]
    - [finish_step, [], {}]
    - [start_step, [And, handle step in outline_step i], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline_step d], {}]
    - [start_hash, [step, in, outline_step, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in outline_step 5:
    success: true
    input: |
      Feature: handle step in outline_step a
      Scenario Outline: handle step in outline_step b
      Given handle step in outline_step c
      But handle step in outline_step j
      Examples: handle step in outline_step d
      | step | in | outline_step | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in outline_step a], {}]
    - [start_outline, [handle step in outline_step b], {}]
    - [start_step, [Given, handle step in outline_step c], {}]
    - [finish_step, [], {}]
    - [start_step, [But, handle step in outline_step j], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle step in outline_step d], {}]
    - [start_hash, [step, in, outline_step, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in outline_step 1:
    success: true
    input: |
      Feature: handle tags in outline_step a
      Scenario Outline: handle tags in outline_step b
      Given handle tags in outline_step c
      @tag_0
      Scenario: handle tags in outline_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in outline_step a], {}]
    - [start_outline, [handle tags in outline_step b], {}]
    - [start_step, [Given, handle tags in outline_step c], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle tags in outline_step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in outline_step 2:
    success: true
    input: |
      Feature: handle tags in outline_step a
      Scenario Outline: handle tags in outline_step b
      Given handle tags in outline_step c
      @tag_1 @tag_2
      Scenario: handle tags in outline_step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in outline_step a], {}]
    - [start_outline, [handle tags in outline_step b], {}]
    - [start_step, [Given, handle tags in outline_step c], {}]
    - [finish_step, [], {}]
    - [finish_outline, [], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_scenario, [handle tags in outline_step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle background in scenario:
    success: true
    input: |
      Feature: handle background in scenario a
      Scenario: handle background in scenario b
      Background: handle background in scenario d
      Scenario: handle background in scenario c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle background in scenario a], {}]
    - [start_scenario, [handle background in scenario b], {}]
    - [finish_scenario, [], {}]
    - [start_background, [handle background in scenario d], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle background in scenario c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle comment in scenario:
    success: true
    input: |
      Feature: handle comment in scenario a
      Scenario: handle comment in scenario b
      # handle comment in scenario c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in scenario a], {}]
    - [start_scenario, [handle comment in scenario b], {}]
    - [comment, ['# handle comment in scenario c'], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in scenario:
    success: false
    input: |
      Feature: handle description in scenario a
      Scenario: handle description in scenario b
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in scenario a], {}]
    - [start_scenario, [handle description in scenario b], {}]
    - [parse_error, [], {}]

  handle examples in scenario 1:
    success: false
    input: |
      Feature: handle examples in scenario a
      Scenario: handle examples in scenario b
      Examples: handle examples in scenario d
      | examples | in | scenario | c |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in scenario a], {}]
    - [start_scenario, [handle examples in scenario b], {}]
    - [parse_error, [], {}]

  handle examples in scenario 2:
    success: false
    input: |
      Feature: handle examples in scenario a
      Scenario: handle examples in scenario b
      Scenarios: handle examples in scenario e
      | examples | in | scenario | c |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in scenario a], {}]
    - [start_scenario, [handle examples in scenario b], {}]
    - [parse_error, [], {}]

  handle feature in scenario:
    success: false
    input: |
      Feature: handle feature in scenario a
      Scenario: handle feature in scenario b
      Feature: handle feature in scenario c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle feature in scenario a], {}]
    - [start_scenario, [handle feature in scenario b], {}]
    - [parse_error, [], {}]

  handle hash in scenario:
    success: false
    input: |
      Feature: handle hash in scenario a
      Scenario: handle hash in scenario b
      | hash | in | scenario | c |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle hash in scenario a], {}]
    - [start_scenario, [handle hash in scenario b], {}]
    - [parse_error, [], {}]

  handle multiline in scenario:
    success: false
    input: |
      Feature: handle multiline in scenario a
      Scenario: handle multiline in scenario b
      """
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline in scenario a], {}]
    - [start_scenario, [handle multiline in scenario b], {}]
    - [parse_error, [], {}]

  handle outline in scenario:
    success: true
    input: |
      Feature: handle outline in scenario a
      Scenario: handle outline in scenario b
      Scenario Outline: handle outline in scenario e
      Examples: handle outline in scenario c
      | outline | in | scenario | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in scenario a], {}]
    - [start_scenario, [handle outline in scenario b], {}]
    - [finish_scenario, [], {}]
    - [start_outline, [handle outline in scenario e], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle outline in scenario c], {}]
    - [start_hash, [outline, in, scenario, d], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle scenario in scenario:
    success: true
    input: |
      Feature: handle scenario in scenario a
      Scenario: handle scenario in scenario b
      Scenario: handle scenario in scenario c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in scenario a], {}]
    - [start_scenario, [handle scenario in scenario b], {}]
    - [finish_scenario, [], {}]
    - [start_scenario, [handle scenario in scenario c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in scenario 1:
    success: true
    input: |
      Feature: handle step in scenario a
      Scenario: handle step in scenario b
      Given handle step in scenario c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in scenario a], {}]
    - [start_scenario, [handle step in scenario b], {}]
    - [start_step, [Given, handle step in scenario c], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in scenario 2:
    success: true
    input: |
      Feature: handle step in scenario a
      Scenario: handle step in scenario b
      When handle step in scenario d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in scenario a], {}]
    - [start_scenario, [handle step in scenario b], {}]
    - [start_step, [When, handle step in scenario d], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in scenario 3:
    success: true
    input: |
      Feature: handle step in scenario a
      Scenario: handle step in scenario b
      Then handle step in scenario e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in scenario a], {}]
    - [start_scenario, [handle step in scenario b], {}]
    - [start_step, [Then, handle step in scenario e], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in scenario 4:
    success: true
    input: |
      Feature: handle step in scenario a
      Scenario: handle step in scenario b
      And handle step in scenario f

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in scenario a], {}]
    - [start_scenario, [handle step in scenario b], {}]
    - [start_step, [And, handle step in scenario f], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in scenario 5:
    success: true
    input: |
      Feature: handle step in scenario a
      Scenario: handle step in scenario b
      But handle step in scenario g

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in scenario a], {}]
    - [start_scenario, [handle step in scenario b], {}]
    - [start_step, [But, handle step in scenario g], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in scenario 1:
    success: true
    input: |
      Feature: handle tags in scenario a
      Scenario: handle tags in scenario b
      @tag_0
      Scenario: handle tags in scenario c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in scenario a], {}]
    - [start_scenario, [handle tags in scenario b], {}]
    - [finish_scenario, [], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle tags in scenario c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in scenario 2:
    success: true
    input: |
      Feature: handle tags in scenario a
      Scenario: handle tags in scenario b
      @tag_1 @tag_2
      Scenario: handle tags in scenario c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in scenario a], {}]
    - [start_scenario, [handle tags in scenario b], {}]
    - [finish_scenario, [], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_scenario, [handle tags in scenario c], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle background in start:
    success: false
    input: |
      Background: handle background in start b
      Scenario: handle background in start a

    callbacks:
    - [start_parse, [<string>], {}]
    - [parse_error, [], {}]

  handle comment in start:
    success: true
    input: |
      # handle comment in start b
      Feature: handle comment in start a

    callbacks:
    - [start_parse, [<string>], {}]
    - [comment, ['# handle comment in start b

      '], {}]
    - [start_feature, [handle comment in start a], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in start:
    success: false
    input: |
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [parse_error, [], {}]

  handle examples in start 1:
    success: false
    input: |
      Examples: handle examples in start b
      | examples | in | start | a |

    callbacks:
    - [start_parse, [<string>], {}]
    - [parse_error, [], {}]

  handle examples in start 2:
    success: false
    input: |
      Scenarios: handle examples in start c
      | examples | in | start | a |

    callbacks:
    - [start_parse, [<string>], {}]
    - [parse_error, [], {}]

  handle feature in start:
    success: true
    input: |
      Feature: handle feature in start a

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle feature in start a], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle hash in start:
    success: false
    input: |
      | hash | in | start | a |

    callbacks:
    - [start_parse, [<string>], {}]
    - [parse_error, [], {}]

  handle multiline in start:
    success: false
    input: |
      """
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [parse_error, [], {}]

  handle outline in start:
    success: false
    input: |
      Scenario Outline: handle outline in start c
      Examples: handle outline in start a
      | outline | in | start | b |

    callbacks:
    - [start_parse, [<string>], {}]
    - [parse_error, [], {}]

  handle scenario in start:
    success: false
    input: |
      Scenario: handle scenario in start a

    callbacks:
    - [start_parse, [<string>], {}]
    - [parse_error, [], {}]

  handle step in start 1:
    success: false
    input: |
      Given handle step in start a

    callbacks:
    - [start_parse, [<string>], {}]
    - [parse_error, [], {}]

  handle step in start 2:
    success: false
    input: |
      When handle step in start b

    callbacks:
    - [start_parse, [<string>], {}]
    - [parse_error, [], {}]

  handle step in start 3:
    success: false
    input: |
      Then handle step in start c

    callbacks:
    - [start_parse, [<string>], {}]
    - [parse_error, [], {}]

  handle step in start 4:
    success: false
    input: |
      And handle step in start d

    callbacks:
    - [start_parse, [<string>], {}]
    - [parse_error, [], {}]

  handle step in start 5:
    success: false
    input: |
      But handle step in start e

    callbacks:
    - [start_parse, [<string>], {}]
    - [parse_error, [], {}]

  handle tags in start 1:
    success: true
    input: |
      @tag_0
      Feature: handle tags in start a

    callbacks:
    - [start_parse, [<string>], {}]
    - [tags, [tag_0], {}]
    - [start_feature, [handle tags in start a], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in start 2:
    success: true
    input: |
      @tag_1 @tag_2
      Feature: handle tags in start a

    callbacks:
    - [start_parse, [<string>], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_feature, [handle tags in start a], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle background in step:
    success: true
    input: |
      Feature: handle background in step a
      Scenario: handle background in step b
      Given handle background in step c
      Background: handle background in step e
      Scenario: handle background in step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle background in step a], {}]
    - [start_scenario, [handle background in step b], {}]
    - [start_step, [Given, handle background in step c], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [start_background, [handle background in step e], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle background in step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle comment in step:
    success: true
    input: |
      Feature: handle comment in step a
      Scenario: handle comment in step b
      Given handle comment in step c
      # handle comment in step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in step a], {}]
    - [start_scenario, [handle comment in step b], {}]
    - [start_step, [Given, handle comment in step c], {}]
    - [comment, ['# handle comment in step d'], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in step:
    success: false
    input: |
      Feature: handle description in step a
      Scenario: handle description in step b
      Given handle description in step c
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in step a], {}]
    - [start_scenario, [handle description in step b], {}]
    - [start_step, [Given, handle description in step c], {}]
    - [parse_error, [], {}]

  handle examples in step 1:
    success: false
    input: |
      Feature: handle examples in step a
      Scenario: handle examples in step b
      Given handle examples in step c
      Examples: handle examples in step e
      | examples | in | step | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in step a], {}]
    - [start_scenario, [handle examples in step b], {}]
    - [start_step, [Given, handle examples in step c], {}]
    - [parse_error, [], {}]

  handle examples in step 2:
    success: false
    input: |
      Feature: handle examples in step a
      Scenario: handle examples in step b
      Given handle examples in step c
      Scenarios: handle examples in step f
      | examples | in | step | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in step a], {}]
    - [start_scenario, [handle examples in step b], {}]
    - [start_step, [Given, handle examples in step c], {}]
    - [parse_error, [], {}]

  handle feature in step:
    success: false
    input: |
      Feature: handle feature in step a
      Scenario: handle feature in step b
      Given handle feature in step c
      Feature: handle feature in step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle feature in step a], {}]
    - [start_scenario, [handle feature in step b], {}]
    - [start_step, [Given, handle feature in step c], {}]
    - [parse_error, [], {}]

  handle hash in step:
    success: true
    input: |
      Feature: handle hash in step a
      Scenario: handle hash in step b
      Given handle hash in step c
      | hash | in | step | d |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle hash in step a], {}]
    - [start_scenario, [handle hash in step b], {}]
    - [start_step, [Given, handle hash in step c], {}]
    - [start_hash, [hash, in, step, d], {}]
    - [finish_hash, [], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline in step:
    success: true
    input: |
      Feature: handle multiline in step a
      Scenario: handle multiline in step b
      Given handle multiline in step c
      """
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline in step a], {}]
    - [start_scenario, [handle multiline in step b], {}]
    - [start_step, [Given, handle multiline in step c], {}]
    - [start_multiline, [0], {}]
    - [finish_multiline, [], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle multiline_data in step:
    success: false
    input: |
      Feature: handle multiline_data in step a
      Scenario: handle multiline_data in step b
      Given handle multiline_data in step c
        random text
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline_data in step a], {}]
    - [start_scenario, [handle multiline_data in step b], {}]
    - [start_step, [Given, handle multiline_data in step c], {}]
    - [parse_error, [], {}]

  handle multiline_end in step:
    success: false
    input: |
      Feature: handle multiline_end in step a
      Scenario: handle multiline_end in step b
      Given handle multiline_end in step c
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline_end in step a], {}]
    - [start_scenario, [handle multiline_end in step b], {}]
    - [start_step, [Given, handle multiline_end in step c], {}]
    - [start_multiline, [0], {}]
    - [parse_error, [], {}]

  handle outline in step:
    success: true
    input: |
      Feature: handle outline in step a
      Scenario: handle outline in step b
      Given handle outline in step c
      Scenario Outline: handle outline in step f
      Examples: handle outline in step d
      | outline | in | step | e |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in step a], {}]
    - [start_scenario, [handle outline in step b], {}]
    - [start_step, [Given, handle outline in step c], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [start_outline, [handle outline in step f], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle outline in step d], {}]
    - [start_hash, [outline, in, step, e], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle scenario in step:
    success: true
    input: |
      Feature: handle scenario in step a
      Scenario: handle scenario in step b
      Given handle scenario in step c
      Scenario: handle scenario in step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in step a], {}]
    - [start_scenario, [handle scenario in step b], {}]
    - [start_step, [Given, handle scenario in step c], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [start_scenario, [handle scenario in step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in step 1:
    success: true
    input: |
      Feature: handle step in step a
      Scenario: handle step in step b
      Given handle step in step c
      Given handle step in step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in step a], {}]
    - [start_scenario, [handle step in step b], {}]
    - [start_step, [Given, handle step in step c], {}]
    - [finish_step, [], {}]
    - [start_step, [Given, handle step in step d], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in step 2:
    success: true
    input: |
      Feature: handle step in step a
      Scenario: handle step in step b
      Given handle step in step c
      When handle step in step e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in step a], {}]
    - [start_scenario, [handle step in step b], {}]
    - [start_step, [Given, handle step in step c], {}]
    - [finish_step, [], {}]
    - [start_step, [When, handle step in step e], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in step 3:
    success: true
    input: |
      Feature: handle step in step a
      Scenario: handle step in step b
      Given handle step in step c
      Then handle step in step f

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in step a], {}]
    - [start_scenario, [handle step in step b], {}]
    - [start_step, [Given, handle step in step c], {}]
    - [finish_step, [], {}]
    - [start_step, [Then, handle step in step f], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in step 4:
    success: true
    input: |
      Feature: handle step in step a
      Scenario: handle step in step b
      Given handle step in step c
      And handle step in step g

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in step a], {}]
    - [start_scenario, [handle step in step b], {}]
    - [start_step, [Given, handle step in step c], {}]
    - [finish_step, [], {}]
    - [start_step, [And, handle step in step g], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in step 5:
    success: true
    input: |
      Feature: handle step in step a
      Scenario: handle step in step b
      Given handle step in step c
      But handle step in step h

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in step a], {}]
    - [start_scenario, [handle step in step b], {}]
    - [start_step, [Given, handle step in step c], {}]
    - [finish_step, [], {}]
    - [start_step, [But, handle step in step h], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in step 1:
    success: true
    input: |
      Feature: handle tags in step a
      Scenario: handle tags in step b
      Given handle tags in step c
      @tag_0
      Scenario: handle tags in step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in step a], {}]
    - [start_scenario, [handle tags in step b], {}]
    - [start_step, [Given, handle tags in step c], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle tags in step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in step 2:
    success: true
    input: |
      Feature: handle tags in step a
      Scenario: handle tags in step b
      Given handle tags in step c
      @tag_1 @tag_2
      Scenario: handle tags in step d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in step a], {}]
    - [start_scenario, [handle tags in step b], {}]
    - [start_step, [Given, handle tags in step c], {}]
    - [finish_step, [], {}]
    - [finish_scenario, [], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_scenario, [handle tags in step d], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle background in tags:
    success: true
    input: |
      Feature: handle background in tags a
      @tag_0
      Background: handle background in tags c
      Scenario: handle background in tags b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle background in tags a], {}]
    - [tags, [tag_0], {}]
    - [start_background, [handle background in tags c], {}]
    - [finish_background, [], {}]
    - [start_scenario, [handle background in tags b], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle comment in tags:
    success: true
    input: |
      Feature: handle comment in tags a
      @tag_0
      # handle comment in tags c
      Scenario: handle comment in tags b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle comment in tags a], {}]
    - [tags, [tag_0], {}]
    - [comment, ['# handle comment in tags c

      '], {}]
    - [start_scenario, [handle comment in tags b], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle description in tags:
    success: false
    input: |
      Feature: handle description in tags a
      @tag_0
      some lines
      of description

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle description in tags a], {}]
    - [tags, [tag_0], {}]
    - [parse_error, [], {}]

  handle examples in tags 1:
    success: true
    input: |
      Feature: handle examples in tags a
      @tag_0
      Examples: handle examples in tags c
      | examples | in | tags | b |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in tags a], {}]
    - [tags, [tag_0], {}]
    - [start_examples, [handle examples in tags c], {}]
    - [start_hash, [examples, in, tags, b], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle examples in tags 2:
    success: true
    input: |
      Feature: handle examples in tags a
      @tag_0
      Scenarios: handle examples in tags d
      | examples | in | tags | b |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle examples in tags a], {}]
    - [tags, [tag_0], {}]
    - [start_examples, [handle examples in tags d], {}]
    - [start_hash, [examples, in, tags, b], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle feature in tags:
    success: false
    input: |
      Feature: handle feature in tags a
      @tag_0
      Feature: handle feature in tags b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle feature in tags a], {}]
    - [tags, [tag_0], {}]
    - [parse_error, [], {}]

  handle hash in tags:
    success: false
    input: |
      Feature: handle hash in tags a
      @tag_0
      | hash | in | tags | b |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle hash in tags a], {}]
    - [tags, [tag_0], {}]
    - [parse_error, [], {}]

  handle multiline in tags:
    success: false
    input: |
      Feature: handle multiline in tags a
      @tag_0
      """
      """

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle multiline in tags a], {}]
    - [tags, [tag_0], {}]
    - [parse_error, [], {}]

  handle outline in tags:
    success: true
    input: |
      Feature: handle outline in tags a
      @tag_0
      Scenario Outline: handle outline in tags d
      Examples: handle outline in tags b
      | outline | in | tags | c |

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle outline in tags a], {}]
    - [tags, [tag_0], {}]
    - [start_outline, [handle outline in tags d], {}]
    - [finish_outline, [], {}]
    - [start_examples, [handle outline in tags b], {}]
    - [start_hash, [outline, in, tags, c], {}]
    - [finish_hash, [], {}]
    - [finish_examples, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle scenario in tags:
    success: true
    input: |
      Feature: handle scenario in tags a
      @tag_0
      Scenario: handle scenario in tags b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle scenario in tags a], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle scenario in tags b], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle step in tags 1:
    success: false
    input: |
      Feature: handle step in tags a
      @tag_0
      Given handle step in tags b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in tags a], {}]
    - [tags, [tag_0], {}]
    - [parse_error, [], {}]

  handle step in tags 2:
    success: false
    input: |
      Feature: handle step in tags a
      @tag_0
      When handle step in tags c

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in tags a], {}]
    - [tags, [tag_0], {}]
    - [parse_error, [], {}]

  handle step in tags 3:
    success: false
    input: |
      Feature: handle step in tags a
      @tag_0
      Then handle step in tags d

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in tags a], {}]
    - [tags, [tag_0], {}]
    - [parse_error, [], {}]

  handle step in tags 4:
    success: false
    input: |
      Feature: handle step in tags a
      @tag_0
      And handle step in tags e

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in tags a], {}]
    - [tags, [tag_0], {}]
    - [parse_error, [], {}]

  handle step in tags 5:
    success: false
    input: |
      Feature: handle step in tags a
      @tag_0
      But handle step in tags f

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle step in tags a], {}]
    - [tags, [tag_0], {}]
    - [parse_error, [], {}]

  handle tags in tags 1:
    success: true
    input: |
      Feature: handle tags in tags a
      @tag_0
      @tag_0
      Scenario: handle tags in tags b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in tags a], {}]
    - [tags, [tag_0], {}]
    - [tags, [tag_0], {}]
    - [start_scenario, [handle tags in tags b], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

  handle tags in tags 2:
    success: true
    input: |
      Feature: handle tags in tags a
      @tag_0
      @tag_1 @tag_2
      Scenario: handle tags in tags b

    callbacks:
    - [start_parse, [<string>], {}]
    - [start_feature, [handle tags in tags a], {}]
    - [tags, [tag_0], {}]
    - [tags, [tag_1, tag_2], {}]
    - [start_scenario, [handle tags in tags b], {}]
    - [finish_scenario, [], {}]
    - [finish_feature, [], {}]
    - [finish_parse, [], {}]

unreachable transitions:
- [background, description]
- [background, outline_multiline]
- [background_hash, background]
- [background_hash, description]
- [background_hash, examples]
- [background_hash, multiline]
- [background_hash, outline_multiline]
- [background_hash, start]
- [background_hash, step]
- [background_multiline, background]
- [background_multiline, background_hash]
- [background_multiline, description]
- [background_multiline, examples]
- [background_multiline, examples_hash]
- [background_multiline, feature]
- [background_multiline, hash]
- [background_multiline, multiline]
- [background_multiline, outline]
- [background_multiline, outline_hash]
- [background_multiline, outline_multiline]
- [background_multiline, outline_step]
- [background_multiline, scenario]
- [background_multiline, start]
- [background_multiline, step]
- [background_multiline, tags]
- [background_step, description]
- [examples, background]
- [examples, background_step]
- [examples, description]
- [examples, outline_multiline]
- [examples_hash, background_hash]
- [examples_hash, background_step]
- [examples_hash, description]
- [examples_hash, feature]
- [examples_hash, hash]
- [examples_hash, multiline]
- [examples_hash, outline_hash]
- [examples_hash, outline_multiline]
- [examples_hash, outline_step]
- [examples_hash, start]
- [examples_hash, step]
- [feature, background_hash]
- [feature, background_step]
- [feature, examples]
- [feature, multiline]
- [feature, outline_multiline]
- [feature, outline_step]
- [feature, start]
- [feature, step]
- [hash, background_hash]
- [hash, background_step]
- [hash, description]
- [hash, examples]
- [hash, feature]
- [hash, multiline]
- [hash, outline_hash]
- [hash, outline_multiline]
- [hash, outline_step]
- [hash, start]
- [multiline, background]
- [multiline, background_step]
- [multiline, description]
- [multiline, examples]
- [multiline, outline_multiline]
- [outline, background]
- [outline, background_hash]
- [outline, background_step]
- [outline, description]
- [outline, feature]
- [outline, multiline]
- [outline, outline_multiline]
- [outline, start]
- [outline, step]
- [outline_hash, background]
- [outline_hash, background_hash]
- [outline_hash, background_step]
- [outline_hash, description]
- [outline_hash, feature]
- [outline_hash, multiline]
- [outline_hash, outline]
- [outline_hash, outline_multiline]
- [outline_hash, scenario]
- [outline_hash, start]
- [outline_hash, step]
- [outline_multiline, background_step]
- [outline_multiline, description]
- [outline_step, background]
- [outline_step, background_hash]
- [outline_step, background_step]
- [outline_step, description]
- [outline_step, multiline]
- [outline_step, start]
- [outline_step, step]
- [scenario, background_hash]
- [scenario, background_step]
- [scenario, description]
- [scenario, examples]
- [scenario, feature]
- [scenario, multiline]
- [scenario, outline_multiline]
- [scenario, outline_step]
- [scenario, start]
- [start, background]
- [start, background_step]
- [start, description]
- [start, examples]
- [start, multiline]
- [start, outline_multiline]
- [start, step]
- [step, background_step]
- [step, description]
- [step, examples]
- [step, outline_multiline]
- [tags, background_hash]
- [tags, background_step]
- [tags, description]
- [tags, feature]
- [tags, multiline]
- [tags, outline_multiline]
- [tags, outline_step]
- [tags, start]
- [tags, step]

#.............................................................................
#   test_parser.yaml
